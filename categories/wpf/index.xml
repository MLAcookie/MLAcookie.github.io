<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WPF on MLAcookie</title><link>https://mlacookie.github.io/categories/wpf/</link><description>Recent content in WPF on MLAcookie</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 07 Mar 2024 01:10:14 +0000</lastBuildDate><atom:link href="https://mlacookie.github.io/categories/wpf/index.xml" rel="self" type="application/rss+xml"/><item><title>WPF开发过程中InitializeComponent()神秘报错</title><link>https://mlacookie.github.io/article/categories/wpf/wpf%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E4%B8%ADinitializecomponent-%E7%A5%9E%E7%A7%98%E6%8A%A5%E9%94%99/</link><pubDate>Thu, 07 Mar 2024 01:10:14 +0000</pubDate><guid>https://mlacookie.github.io/article/categories/wpf/wpf%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E4%B8%ADinitializecomponent-%E7%A5%9E%E7%A7%98%E6%8A%A5%E9%94%99/</guid><description>&lt;p>最近在写一个WPF项目，然后今天遇到个非常神秘的问题
就是界面的&lt;code>InitializeComponent()&lt;/code>莫名奇妙报错找不到方法了
我仔细检查代码，也没发现问题
而且最抽象的是，程序也能正常运行
我用ILSpy去看编译后的文件，发现&lt;code>InitializeComponent()&lt;/code>也是有的&lt;/p>
&lt;p>但报错看着总是不舒服啊，还是要解决
参考网上的说法，进入项目的文件夹
然后把&lt;code>obj&lt;/code>文件夹删掉，再在vs里面重新生成一下就好了
据说是因为分布类的问题，实际编译时生成的代码是正确的
但是&lt;code>IntelliCode&lt;/code>依赖的文件可能没更新上
然后就开始误报找不到&lt;code>InitializeComponent()&lt;/code>&lt;/p>
&lt;p>总之还是一个很神秘的问题&lt;/p></description></item><item><title>WPF学习笔记06-关于ListView</title><link>https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/</link><pubDate>Mon, 18 Sep 2023 20:10:22 +0000</pubDate><guid>https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/</guid><description>&lt;h2 id="0x00-listview是什么">&amp;lt;0x00&amp;gt; ListView是什么
&lt;/h2>&lt;p>贴张图就好了&lt;br>
&lt;img src="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/1.png"
width="315"
height="87"
srcset="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/1_hu10104860430969372561.png 480w, https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/1_hu11462016388892237703.png 1024w"
loading="lazy"
alt="微软给的图"
class="gallery-image"
data-flex-grow="362"
data-flex-basis="868px"
>&lt;br>
就是类似这种一行一行展示信息的控件&lt;br>
当然也不一定是像这种的类似表格的样子(这种后面会讲)&lt;br>
但都是一行一行的以行为单位的显示一些集合类的显示控件&lt;/p>
&lt;h2 id="0x01-先讲wpf里面自带的listview">&amp;lt;0x01&amp;gt; 先讲WPF里面自带的ListView
&lt;/h2>&lt;p>先给个代码，做一个最简单的演示&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--MainWindow.xaml--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;local:ViewModel/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView&lt;/span> &lt;span style="color:#a6e22e">ItemsSource=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding SomeItems}&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//ViewModel.cs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//常用引用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> WPFTest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">internal&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ViewModel&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> List&amp;lt;&lt;span style="color:#66d9ef">string&lt;/span>&amp;gt; SomeItems { &lt;span style="color:#66d9ef">get&lt;/span>; &lt;span style="color:#66d9ef">set&lt;/span>; } = &lt;span style="color:#66d9ef">new&lt;/span> List&amp;lt;&lt;span style="color:#66d9ef">string&lt;/span>&amp;gt;()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;aaa&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;bbb&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ccc&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ddd&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;fff&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>演示的结果&lt;br>
&lt;img src="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/2.png"
width="307"
height="130"
srcset="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/2_hu4978152284371068872.png 480w, https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/2_hu150308122996815979.png 1024w"
loading="lazy"
alt="演示"
class="gallery-image"
data-flex-grow="236"
data-flex-basis="566px"
>&lt;br>
这个就是最简单的ListView，也是WPF默认的样式&lt;br>
(从这期开始的图会多一点，以前的博文也会慢慢补图，感觉没图还是不好理解)&lt;/p>
&lt;p>我们可以先分析下这个控件需要什么，我们能得到什么&lt;br>
首先就肯定是需要一个集合啦&lt;br>
集合无所谓类型(应该都能用，看你怎么绑定)&lt;br>
然后我们能得到一个这样的显示&lt;br>
我们可以看到，在这个控件里面已经实现了页面滚动与子项的选择&lt;br>
(可以说除了有点不符合当代审美之外都没啥问题)&lt;/p>
&lt;h3 id="单项添加">单项添加
&lt;/h3>&lt;p>有时候可能也不是集合提供子项，可能本身就是写死的&lt;br>
这时候就要自己写&lt;code>ListViewItem&lt;/code>了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--MainWindow.xaml--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SelectionMode=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Single&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListViewItem&lt;/span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;something1&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListViewItem&lt;/span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;something2&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListViewItem&lt;/span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;something3&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListViewItem&lt;/span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;something4&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListViewItem&lt;/span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;something5&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/3.png"
width="288"
height="132"
srcset="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/3_hu2991096702390541283.png 480w, https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/3_hu8350138577542016632.png 1024w"
loading="lazy"
alt="效果"
class="gallery-image"
data-flex-grow="218"
data-flex-basis="523px"
>&lt;/p>
&lt;p>每个&lt;code>ListViewItem&lt;/code>也都能设置自己的&lt;code>Background&lt;/code>之类的属性，这里就不多写了&lt;/p>
&lt;h3 id="美化子项">美化子项
&lt;/h3>&lt;p>那我们还是要稍微美化一下的，虽然这样搞已经能用了&lt;br>
我们有两种方式&lt;br>
一个是操作&lt;code>ItemStyle&lt;/code>，另一个是操作&lt;code>ItemTemplate&lt;/code>&lt;/p>
&lt;h4 id="操作itemstyle">操作ItemStyle
&lt;/h4>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--MainWindow.xaml--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;local:ViewModel/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView&lt;/span> &lt;span style="color:#a6e22e">ItemsSource=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding SomeItems}&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView.ItemContainerStyle&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Style&lt;/span> &lt;span style="color:#a6e22e">TargetType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ListViewItem&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;FontSize&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Foreground&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Red&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Background&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BurlyWood&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Style.Triggers&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--Trigger这里就偷懒了--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Style.Triggers&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Style&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView.ItemContainerStyle&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过&lt;code>ListView.ItemContainerStyle&lt;/code>里面设置&lt;code>ListViewItem&lt;/code>的样式&lt;br>
样式就按一般的方式走，这里就随便设置了下，&lt;code>Triggers&lt;/code>也能设置，这里懒得写了&lt;br>
&lt;img src="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/4.png"
width="406"
height="179"
srcset="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/4_hu1982316204654177891.png 480w, https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/4_hu7406853540044865399.png 1024w"
loading="lazy"
alt="ItemViewStyle方法"
class="gallery-image"
data-flex-grow="226"
data-flex-basis="544px"
>&lt;/p>
&lt;h4 id="操作itemtemplate">操作ItemTemplate
&lt;/h4>&lt;p>这里需要修改下ViewModel，为了更方便的绑定&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//ViewModel2.cs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//常用引用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> WPFTest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">internal&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ViewModel2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> List&amp;lt;TypicalItem&amp;gt; SomeItems { &lt;span style="color:#66d9ef">get&lt;/span>; &lt;span style="color:#66d9ef">set&lt;/span>; } = &lt;span style="color:#66d9ef">new&lt;/span> List&amp;lt;TypicalItem&amp;gt;()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> TypicalItem(&lt;span style="color:#e6db74">&amp;#34;aaa&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> SolidColorBrush(Color.FromRgb(&lt;span style="color:#ae81ff">82&lt;/span>,&lt;span style="color:#ae81ff">114&lt;/span>,&lt;span style="color:#ae81ff">248&lt;/span>))),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> TypicalItem(&lt;span style="color:#e6db74">&amp;#34;bbb&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> SolidColorBrush(Color.FromRgb(&lt;span style="color:#ae81ff">72&lt;/span>,&lt;span style="color:#ae81ff">137&lt;/span>,&lt;span style="color:#ae81ff">217&lt;/span>))),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> TypicalItem(&lt;span style="color:#e6db74">&amp;#34;ccc&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> SolidColorBrush(Color.FromRgb(&lt;span style="color:#ae81ff">91&lt;/span>,&lt;span style="color:#ae81ff">199&lt;/span>,&lt;span style="color:#ae81ff">240&lt;/span>))),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> TypicalItem(&lt;span style="color:#e6db74">&amp;#34;ddd&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> SolidColorBrush(Color.FromRgb(&lt;span style="color:#ae81ff">72&lt;/span>,&lt;span style="color:#ae81ff">214&lt;/span>,&lt;span style="color:#ae81ff">217&lt;/span>))),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> TypicalItem(&lt;span style="color:#e6db74">&amp;#34;eee&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> SolidColorBrush(Color.FromRgb(&lt;span style="color:#ae81ff">82&lt;/span>,&lt;span style="color:#ae81ff">248&lt;/span>,&lt;span style="color:#ae81ff">205&lt;/span>))),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">TypicalItem&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span> Name { &lt;span style="color:#66d9ef">get&lt;/span>; &lt;span style="color:#66d9ef">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Brush Color { &lt;span style="color:#66d9ef">get&lt;/span>; &lt;span style="color:#66d9ef">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> TypicalItem(&lt;span style="color:#66d9ef">string&lt;/span> name, Brush color)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name = name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Color = color;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--MainWindow.xaml--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;local:ViewModel2/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView&lt;/span> &lt;span style="color:#a6e22e">ItemsSource=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding SomeItems}&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView.ItemTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;DataTemplate&lt;/span> &lt;span style="color:#a6e22e">DataType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ListViewItem&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Border&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;TextBox&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Text=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Name}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Background=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Color}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">FontSize=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Border&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/DataTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView.ItemTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/5.png"
width="385"
height="193"
srcset="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/5_hu9895216091486265741.png 480w, https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/5_hu4025268600109556046.png 1024w"
loading="lazy"
alt="ItemTemplate方法"
class="gallery-image"
data-flex-grow="199"
data-flex-basis="478px"
>&lt;br>
效果就差不多这样&lt;/p>
&lt;h4 id="区别">区别
&lt;/h4>&lt;p>实际上两个的侧重点是不一样的&lt;br>
&lt;code>ItemContainerStyle&lt;/code>重点在每个子项的样式设置&lt;br>
比方说就是每个子项的背景，子项按下的动画效果之类的&lt;br>
&lt;code>ItemTemplate&lt;/code>侧重在子项内部是怎么显示的&lt;br>
比方说写了个数据类型，里面有好几条属性&lt;br>
那么就可以用&lt;code>ItemTemplate&lt;/code>来自定义这些属性怎么显示&lt;/p>
&lt;p>我怀疑&lt;code>ListViewItem&lt;/code>里面就是包着自己的UI树的&lt;br>
但可视化树没显示，也不敢说死&lt;/p>
&lt;p>这两个的效果肯定是能合并在一起的，毕竟这俩侧重点是完全不一样的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--MainWindow.xaml--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;local:ViewModel2/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ItemsSource=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding SomeItems}&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--其实就加了这一个块--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView.ItemContainerStyle&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Style&lt;/span> &lt;span style="color:#a6e22e">TargetType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ListViewItem&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Background&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BurlyWood&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Style&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView.ItemContainerStyle&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView.ItemTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;DataTemplate&lt;/span> &lt;span style="color:#a6e22e">DataType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ListViewItem&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Border&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;TextBox&lt;/span> &lt;span style="color:#a6e22e">Text=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Name}&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Background=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Color}&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">FontSize=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Border&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/DataTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView.ItemTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/6.png"
width="400"
height="191"
srcset="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/6_hu16061936958746508311.png 480w, https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/6_hu17043903234950056753.png 1024w"
loading="lazy"
alt="合并"
class="gallery-image"
data-flex-grow="209"
data-flex-basis="502px"
>&lt;/p>
&lt;h3 id="和程序行为合并">和程序行为合并
&lt;/h3>&lt;p>那下一步就是写选中子项的行为了&lt;br>
我们可以通过设置&lt;code>SelectionChanged&lt;/code>事件&lt;br>
为了演示，先修改下前端代码，这里举选择子项切换Border背景颜色的例子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--MainWindow.xaml--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;local:ViewModel2/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--加了个Grid，上下分割--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid.RowDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid.RowDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ItemsSource=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding SomeItems}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SelectionMode=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Single&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SelectionChanged=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ListView_SelectionChanged&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView.ItemContainerStyle&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Style&lt;/span> &lt;span style="color:#a6e22e">TargetType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ListViewItem&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Background&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BurlyWood&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Style&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView.ItemContainerStyle&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView.ItemTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;DataTemplate&lt;/span> &lt;span style="color:#a6e22e">DataType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ListViewItem&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Border&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;TextBox&lt;/span> &lt;span style="color:#a6e22e">Text=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Name}&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Background=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Color}&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">FontSize=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Border&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/DataTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView.ItemTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--用来显示子项切换的效果的Border--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Border&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;MyBorder&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//MainWindow.xaml.cs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//引用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> WPFTest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">partial&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MainWindow&lt;/span> : Window
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> MainWindow()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InitializeComponent();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> ListView_SelectionChanged(&lt;span style="color:#66d9ef">object&lt;/span> sender, SelectionChangedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MyBorder.Background = (e.AddedItems[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#66d9ef">as&lt;/span> TypicalItem).Color;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/7.png"
width="400"
height="400"
srcset="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/7_hu4676164823898837087.png 480w, https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B006-%E5%85%B3%E4%BA%8Elistview/picture/7_hu14564971074134562542.png 1024w"
loading="lazy"
alt="简单的演示"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="240px"
>&lt;br>
这样就解决了&lt;br>
&lt;code>.xaml&lt;/code>的代码就不解释了，&lt;code>.cs&lt;/code>的代码还是能讲一下的&lt;br>
主要就是用&lt;code>e.AddedItems[0]&lt;/code>拿到选中的&lt;code>TypicalItem&lt;/code>对象&lt;br>
(&lt;code>e.AddedItems[0]&lt;/code>这个语法确实很怪，估计是主要是为了支持多个选中的情况)&lt;/p>
&lt;p>如果给&lt;code>ListView&lt;/code>起了名字的话也可以这么写(这里起名是&lt;code>MyListView&lt;/code>)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//MainWindow.xaml.cs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//引用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> WPFTest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">partial&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MainWindow&lt;/span> : Window
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> MainWindow()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InitializeComponent();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> MyListView_SelectionChanged(&lt;span style="color:#66d9ef">object&lt;/span> sender, SelectionChangedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MyBorder.Background = (MyListView.SelectedItem &lt;span style="color:#66d9ef">as&lt;/span> TypicalItem).Color;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>一般来说这么访问选中的子项会多一点&lt;br>
因为有些时候会去想双击的代码，这就要用&lt;code>MouseDoubleClick&lt;/code>事件了&lt;br>
但&lt;code>MouseDoubleClick&lt;/code>是不带&lt;code>SelectionChangedEventArgs e&lt;/code>的&lt;br>
也就是说我们是不能靠&lt;code>传参变量e&lt;/code>来获取选择了哪个子项的&lt;br>
但靠&lt;code>MyListView.SelectedItem&lt;/code>这种方式就方便很多，都能用了&lt;/p>
&lt;p>顺便在这里提一点，如果要定义多个鼠标事件，不能采用传统的&lt;code>.xaml&lt;/code>写事件然后在&lt;code>.cs&lt;/code>写&lt;br>
因为这么写运行的时候这些&lt;code>MouseHandler&lt;/code>会相互屏蔽而导致有些就触发不了&lt;br>
比如按传统方式同时设置&lt;code>MouseDoubleClick&lt;/code>和&lt;code>MouseRightButtonDown&lt;/code>，只能触发前者&lt;br>
要都能触发，应该在控件的初始化用代码初始化这些&lt;code>Handler&lt;/code>&lt;br>
&lt;code>.xaml&lt;/code>里面可以按传统方法留一个，但别的都要靠代码方式添加&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//MainWindow.xaml.cs(随便举例的，与前面的代码无关)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//引用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> WPFTest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">partial&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MainWindow&lt;/span> : Window
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> MainWindow()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InitializeComponent();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//就是在这里自己添加&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MyListView.AddHandler(MouseDoubleClickEvent, &lt;span style="color:#66d9ef">new&lt;/span> MouseButtonEventHandler(&lt;span style="color:#66d9ef">this&lt;/span>.MyListView_MouseDoubleClick), &lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MyListView.AddHandler(MouseRightButtonDownEvent, &lt;span style="color:#66d9ef">new&lt;/span> MouseButtonEventHandler(&lt;span style="color:#66d9ef">this&lt;/span>.MyListView_MouseRightButtonDown), &lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> MyListView_MouseDoubleClick(&lt;span style="color:#66d9ef">object&lt;/span> sender, MouseButtonEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//处理代码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> MyListView_MouseRightButtonDown(&lt;span style="color:#66d9ef">object&lt;/span> sender, MouseButtonEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//处理代码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>还有就是我还没啥办法实现类似&lt;code>Button&lt;/code>绑定&lt;code>ICommand&lt;/code>的做法&lt;br>
但其实可以把方法本体写在&lt;code>VM&lt;/code>里，然后在&lt;code>.cs&lt;/code>里用&lt;code>DataContext&lt;/code>调命令，实现猴版的&lt;code>MVVM&lt;/code>&lt;br>
这里就不细讲了&lt;/p>
&lt;h3 id="网格布局gridview">网格布局GridView
&lt;/h3>&lt;p>博客最上面的图就是使用了&lt;code>GridView&lt;/code>的效果&lt;br>
&lt;img src="https://mlacookie.github.io/Blog/%e7%bb%99%e4%be%a7%e8%be%b9%e6%a0%8f%e5%8a%a0%e4%b8%aaB%e7%ab%99%e5%9b%be%e6%a0%87/picture/1.jpg"
loading="lazy"
alt="这张图"
>&lt;br>
(就是这张)&lt;/p>
&lt;p>&lt;code>GridView&lt;/code>是嵌套在&lt;code>ListView&lt;/code>里面的，具体代码如下&lt;br>
(还是用得ViewModel2.cs)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--MainWindow.xaml--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;local:ViewModel2/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ItemsSource=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding SomeItems}&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView.View&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GridView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GridViewColumn&lt;/span> &lt;span style="color:#a6e22e">Header=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Name&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">DisplayMemberBinding=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Name}&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GridViewColumn&lt;/span> &lt;span style="color:#a6e22e">Header=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Color&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GridViewColumn.CellTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;DataTemplate&lt;/span> &lt;span style="color:#a6e22e">DataType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;local:TypicalItem&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;TextBlock&lt;/span> &lt;span style="color:#a6e22e">Text=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Color}&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Background=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Color}&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/DataTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/GridViewColumn.CellTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/GridViewColumn&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/GridView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView.View&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://mlacookie.github.io/8.png"
loading="lazy"
alt="emmm"
>&lt;br>
这样就实现了类似前面那张图的效果了&lt;/p>
&lt;p>这里不难看出&lt;code>GridView&lt;/code>是隶属于&lt;code>ListView&lt;/code>的&lt;br>
然后对于每一个格子，也是能自定义&lt;code>Template&lt;/code>的&lt;/p>
&lt;p>最上面的是&lt;code>Header&lt;/code>，也能自定义&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--MainWindow.xaml--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;local:ViewModel2/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ItemsSource=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding SomeItems}&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView.View&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GridView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GridViewColumn&lt;/span> &lt;span style="color:#a6e22e">Header=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Name&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">DisplayMemberBinding=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Name}&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GridViewColumn&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--就改了这里--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GridViewColumnHeader&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;TextBlock&lt;/span> &lt;span style="color:#a6e22e">Text=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;emm&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Background=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BurlyWood&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/GridViewColumnHeader&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GridViewColumn.CellTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;DataTemplate&lt;/span> &lt;span style="color:#a6e22e">DataType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;local:TypicalItem&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;TextBlock&lt;/span> &lt;span style="color:#a6e22e">Text=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Color}&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Background=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Color}&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/DataTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/GridViewColumn.CellTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/GridViewColumn&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/GridView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView.View&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>简单写一下就是这样了&lt;br>
前面讲的&lt;code>SelectionChanged&lt;/code>和&lt;code>MouseDoubleClick&lt;/code>之类的还是写在&lt;code>ListView&lt;/code>的块里&lt;br>
这样就可以实现表格化的效果了&lt;/p>
&lt;h2 id="0x02-讲讲modernwpf的listview">&amp;lt;0x02&amp;gt; 讲讲ModernWPF的ListView
&lt;/h2>&lt;p>因为有自己的练手项目在用这个包，所以就顺便讲讲了&lt;br>
(Nuget上有好多叫ModernWPF的包，我自己用的是&lt;a class="link" href="https://github.com/Kinnara/ModernWpf" target="_blank" rel="noopener"
>这个&lt;/a>)&lt;br>
之前的博客也有讲过一点&lt;/p>
&lt;p>在&lt;code>ModernWPF&lt;/code>的包里面有两种&lt;code>ListView&lt;/code>实现&lt;br>
一种是使用&lt;code>WPF&lt;/code>原生的&lt;code>ListView&lt;/code>但修改了&lt;code>Style&lt;/code>来匹配风格&lt;br>
另一种是包里面自己写的&lt;code>ListView&lt;/code>&lt;br>
前者就要求别去改&lt;code>Style&lt;/code>，不然所有的样式又要自己写&lt;br>
后者的化代码风格会更像&lt;code>UWP&lt;/code>开发，有些写法确实挺新的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--MainWindow.xaml--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:ui=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.modernwpf.com/2019&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ui:WindowHelper.UseModernWindowStyle=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;True&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--这里用的是最前面的ViewModel--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;local:ViewModel/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid.RowDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid.RowDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ItemsSource=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding SomeItems}&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ui:ListView&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ItemsSource=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding SomeItems}&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://mlacookie.github.io/9.png"
loading="lazy"
alt="效果"
>&lt;br>
这里演示了这个包里面的两种写法，效果上是一样的&lt;br>
其余大部分都可以按WPF原生的写法写&lt;br>
但如果要用GridView，那么只有原生的写法(这个包没自己写)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--MainWindow.xaml--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:ui=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.modernwpf.com/2019&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ui:WindowHelper.UseModernWindowStyle=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;True&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;local:ViewModel2/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ItemsSource=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding SomeItems}&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView.View&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GridView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GridViewColumn&lt;/span> &lt;span style="color:#a6e22e">Header=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Name&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">DisplayMemberBinding=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Name}&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GridViewColumn&lt;/span> &lt;span style="color:#a6e22e">Header=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Color&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">DisplayMemberBinding=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Color}&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/GridView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView.View&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://mlacookie.github.io/10.png"
loading="lazy"
alt="演示"
>&lt;br>
这里可以看得，如果用GridView的话，右边的滚动条时不会收纳的&lt;br>
(准确来说自动从收纳状态变成展开状态)&lt;/p>
&lt;p>别的自定义之类的也和WPF原生写法一样，就是尽量别动Style&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--MainWindow.xaml--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:ui=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.modernwpf.com/2019&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ui:WindowHelper.UseModernWindowStyle=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;True&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;local:ViewModel2/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ItemsSource=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding SomeItems}&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ListView.View&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GridView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GridViewColumn&lt;/span> &lt;span style="color:#a6e22e">Header=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Name&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">DisplayMemberBinding=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Name}&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GridViewColumn&lt;/span> &lt;span style="color:#a6e22e">Header=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Color&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GridViewColumn.CellTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;DataTemplate&lt;/span> &lt;span style="color:#a6e22e">DataType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;local:TypicalItem&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Color}&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Background=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Color}&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/DataTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/GridViewColumn.CellTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/GridViewColumn&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/GridView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView.View&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ListView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://mlacookie.github.io/11.png"
loading="lazy"
alt="演示"
>&lt;/p>
&lt;p>写这篇博客真的花了不少时间，大家看得开心就好&lt;/p></description></item><item><title>WPF学习笔记05-怎么用ModernWPF实现带导航的界面</title><link>https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B005-%E6%80%8E%E4%B9%88%E7%94%A8modernwpf%E5%AE%9E%E7%8E%B0%E5%B8%A6%E5%AF%BC%E8%88%AA%E7%9A%84%E7%95%8C%E9%9D%A2/</link><pubDate>Wed, 30 Aug 2023 13:28:48 +0000</pubDate><guid>https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B005-%E6%80%8E%E4%B9%88%E7%94%A8modernwpf%E5%AE%9E%E7%8E%B0%E5%B8%A6%E5%AF%BC%E8%88%AA%E7%9A%84%E7%95%8C%E9%9D%A2/</guid><description>&lt;h2 id="0x00-介绍下modernwpf">&amp;lt;0x00&amp;gt; 介绍下ModernWPF
&lt;/h2>&lt;p>这个其实是个&lt;code>Nuget&lt;/code>包，里面有很多现代化设计的&lt;code>WPF&lt;/code>组件&lt;br>
不是之前说嘛，在&lt;code>WPF&lt;/code>里面做现代化的&lt;code>UI&lt;/code>设计很复杂&lt;br>
现在差不多就是别人已经把最复杂的实现写完了，我们只要调用就好了&lt;/p>
&lt;p>这个包的实现风格是&lt;code>UWP&lt;/code>风格(也就是&lt;code>WinUI2&lt;/code>)&lt;br>
里面的很多用法是参考&lt;code>UWP&lt;/code>的(我具体用下来就是&lt;code>UWP&lt;/code>的api级复刻)&lt;br>
所以有些组件的用法跟&lt;code>WPF&lt;/code>的常见实现不一样(就比如这里讲的导航界面)&lt;/p>
&lt;p>安装的话用&lt;code>VS&lt;/code>的&lt;code>Nuget包管理器&lt;/code>就可以&lt;br>
&lt;img src="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B005-%E6%80%8E%E4%B9%88%E7%94%A8modernwpf%E5%AE%9E%E7%8E%B0%E5%B8%A6%E5%AF%BC%E8%88%AA%E7%9A%84%E7%95%8C%E9%9D%A2/picture/1.png"
width="1630"
height="796"
srcset="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B005-%E6%80%8E%E4%B9%88%E7%94%A8modernwpf%E5%AE%9E%E7%8E%B0%E5%B8%A6%E5%AF%BC%E8%88%AA%E7%9A%84%E7%95%8C%E9%9D%A2/picture/1_hu15586002075543139015.png 480w, https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B005-%E6%80%8E%E4%B9%88%E7%94%A8modernwpf%E5%AE%9E%E7%8E%B0%E5%B8%A6%E5%AF%BC%E8%88%AA%E7%9A%84%E7%95%8C%E9%9D%A2/picture/1_hu670083321652710202.png 1024w"
loading="lazy"
alt="认准Nuget包"
class="gallery-image"
data-flex-grow="204"
data-flex-basis="491px"
>&lt;br>
(&lt;code>Nuget&lt;/code>上有很多包叫ModernWPF，我用的是这个，别的实现我就不清楚了，最好一样吧)&lt;br>
&lt;a class="link" href="https://github.com/Kinnara/ModernWpf" target="_blank" rel="noopener"
>Github项目主页&lt;/a>&lt;br>
在Github上也有这个项目的&lt;code>Wiki&lt;/code>，所有组件的使用都有列举一点&lt;br>
因为差不多是完全复刻&lt;code>UWP&lt;/code>的，所以有些样例会直接跳转到微软的文档&lt;br>
照样看就是了，代码实现是差不多的(跳转的文档是英文的，最好就直接看英文，这样最准确)&lt;/p>
&lt;h2 id="0x01-如果是一般的wpf项目我们该怎么实现导航">&amp;lt;0x01&amp;gt; 如果是一般的WPF项目，我们该怎么实现导航
&lt;/h2>&lt;p>还是先稍微讲讲一般的&lt;code>WPF&lt;/code>项目里怎么实现导航&lt;br>
假设我们有&lt;code>MainWindow.xaml&lt;/code>，&lt;code>PageViewModel.cs&lt;/code>，&lt;code>SomePage.xaml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--MainWindow.xaml--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;window&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;window.DataContent&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;local:PageViewModel/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Window.DataContent&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid.ColumnDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--第一列放导航的按钮--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ColumnDefinition&lt;/span> &lt;span style="color:#a6e22e">Width=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;100&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ColumnDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid.ColumnDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;StackPanel&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--若干按钮，具体就不设计了--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Command=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding NavigateToPage}&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/StackPanel&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--内容展示的页面--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;UserControl&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding CurrentPage}&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//PageViewModel.cs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//常见的引用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> TestProject.ViewModel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">internal&lt;/span> &lt;span style="color:#66d9ef">partial&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">PageViewModel&lt;/span>:ObservableObject
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> [ObservableProperty]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">object?&lt;/span> currentPage;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> ICommand NavigateToPage{&lt;span style="color:#66d9ef">get&lt;/span>;&lt;span style="color:#66d9ef">set&lt;/span>;}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> PageViewModel()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CurrentPage=&lt;span style="color:#66d9ef">new&lt;/span> SomePage();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NavigateToPage=&lt;span style="color:#66d9ef">new&lt;/span> RelayCommand(()=&amp;gt;CurrentPage=&lt;span style="color:#66d9ef">new&lt;/span> SomePage());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>(这里的一些没见过的东西是在&lt;code>Community.MVVM&lt;/code>包里面的，上一篇结尾有介绍)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--SomePage.xaml--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;UserControl&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;TextBlock&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Text=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Emmm&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Foreground=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;White&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">HorizontalAlignment=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Center&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">VerticalAlignment=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Center&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">FontSize=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;32&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/UserControl&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里通过&lt;code>UseControl&lt;/code>控件来存放我们自己写的&lt;code>SomePage&lt;/code>&lt;br>
导航栏的每个按钮会绑定一个&lt;code>Command&lt;/code>，来控制&lt;code>UserControl&lt;/code>的&lt;code>Content&lt;/code>&lt;br>
因为这个&lt;code>Content&lt;/code>就存放具体的页面嘛，所以只要改这个&lt;code>Content&lt;/code>就相当于切换页面了&lt;br>
之后有什么多的页面就是先新建一个&lt;code>UserControl&lt;/code>控件并完成设计&lt;br>
然后再在&lt;code>PageViewModel.cs&lt;/code>里面实现切换代码(就是写一行改&lt;code>CurrentPage&lt;/code>的代码)&lt;br>
最后在&lt;code>MainWindow.xaml&lt;/code>里面为对应按钮绑定&lt;code>Command&lt;/code>就好&lt;br>
其实最好是在&lt;code>PageViewModel&lt;/code>里用一个&lt;code>object&lt;/code>数组存储不同的page，我这里就偷懒了&lt;br>
还有就是导航栏我也没咋设计，基本上就是用&lt;code>Triger&lt;/code>配合&lt;code>Setter&lt;/code>做就可以了，这里也摸了&lt;/p>
&lt;h2 id="0x02-用modernwpf里面的navigationview实现导航">&amp;lt;0x02&amp;gt; 用ModernWPF里面的NavigationView实现导航
&lt;/h2>&lt;p>(虽然是介绍怎么在&lt;code>ModernWPF&lt;/code>里面实现导航，因为用法极像&lt;code>UWP&lt;/code>，也算介绍&lt;code>UWP&lt;/code>的开发了)&lt;br>
在&lt;code>ModernWPF&lt;/code>中用&lt;code>NavigationView&lt;/code>做导航就没有类似按钮绑定&lt;code>Command&lt;/code>的用法了&lt;br>
准确来说，用&lt;code>ModernWPF&lt;/code>甚至都不需要写一个对应的&lt;code>VM&lt;/code>&lt;br>
那么怎么切换页面呢&lt;br>
差不多就是靠&lt;code>.xaml&lt;/code>附带的&lt;code>.cs&lt;/code>里面实现了&lt;br>
先上代码&lt;br>
(ModernWPF有使用前的一些步骤，在它的&lt;code>readme&lt;/code>有写，就两步，我就不介绍了)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--ModernUITest.xaml--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#a6e22e">x:Class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;TestProject.ModernUITest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:d=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.microsoft.com/expression/blend/2008&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:mc=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.openxmlformats.org/markup-compatibility/2006&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:ui=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.modernwpf.com/2019&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:local=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;clr-namespace:TestProject&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">mc:Ignorable=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;d&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ui:WindowHelper.UseModernWindowStyle=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;True&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Title=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ModernUITest&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;800&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Width=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;800&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ui:NavigationView&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">IsBackButtonVisible=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Collapsed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">IsTitleBarAutoPaddingEnabled=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;False&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">PaneTitle=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Test&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">PaneDisplayMode=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Auto&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ItemInvoked=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;NavigationView_ItemInvoked&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ui:NavigationView.MenuItems&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ui:NavigationViewItem&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Icon=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Home&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Tag=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;TestProject.Page.PageTest1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Sample Item 1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">IsSelected=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;True&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ui:NavigationViewItem&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Icon=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Keyboard&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Sample Item 2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Tag=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;TestProject.Page.PageTest2&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ui:NavigationView.MenuItems&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;UserControl&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;UC&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ui:NavigationView&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//ModernUITest.xaml.cs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//常见的引用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> TestProject
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">partial&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ModernUITest&lt;/span> : Window
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> ModernUITest()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InitializeComponent();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UC.Content = &lt;span style="color:#66d9ef">new&lt;/span> PageTest1();&lt;span style="color:#75715e">//给一个默认的页面&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> NavigationView_ItemInvoked(ModernWpf.Controls.NavigationView sender, ModernWpf.Controls.NavigationViewItemInvokedEventArgs args)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(args.IsSettingsInvoked==&lt;span style="color:#66d9ef">true&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NavigationView_Navigate(&lt;span style="color:#66d9ef">typeof&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span>), args.RecommendedNavigationTransitionInfo);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//我这里没写Setting的page，所以就随便写了typeof(int)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span>(args.InvokedItemContainer!=&lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NavigationView_Navigate(Type.GetType(args.InvokedItemContainer.Tag.ToString()), args.RecommendedNavigationTransitionInfo);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> NavigationView_Navigate(Type navPageType, NavigationTransitionInfo transitionInfo)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type preNavPageType = UC.Content.GetType();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(navPageType &lt;span style="color:#66d9ef">is&lt;/span> not &lt;span style="color:#66d9ef">null&lt;/span> &amp;amp;&amp;amp; !Type.Equals(navPageType, preNavPageType))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(navPageType==&lt;span style="color:#66d9ef">typeof&lt;/span>(PageTest1))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UC.Content = &lt;span style="color:#66d9ef">new&lt;/span> PageTest1();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (navPageType == &lt;span style="color:#66d9ef">typeof&lt;/span>(PageTest2))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UC.Content = &lt;span style="color:#66d9ef">new&lt;/span> PageTest2();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>(PageTest1和PageTest2的代码就不贴了，就纯纯的一行字)&lt;/p>
&lt;h3 id="先讲下包里的东西">先讲下包里的东西
&lt;/h3>&lt;p>&lt;code>ui:WindowHelper.UseModernWindowStyle=true&lt;/code>表示使用ModernWPF的窗口样式&lt;br>
&lt;code>window&lt;/code>控件下面只有&lt;code>ui:NavigationView&lt;/code>&lt;br>
先在&lt;code>ui:NavigationView&lt;/code>里面设置&lt;code>ui:NavigationView.MenuItems&lt;/code>&lt;br>
再在里面设置&lt;code>ui:NavigationViewItem&lt;/code>，要几个就设置几个&lt;br>
&lt;code>ui:NavigationView&lt;/code>下面有个&lt;code>UserControl&lt;/code>，这个就是我们要切换的页面&lt;/p>
&lt;p>&lt;code>ui:NavigationView&lt;/code>里面有些属性&lt;br>
&lt;code>IsBackButtonVisible=&amp;quot;Collapsed&amp;quot;&lt;/code>是关闭默认的返回按钮&lt;br>
&lt;code>IsTitleBarAutoPaddingEnabled=&amp;quot;False&amp;quot;&lt;/code>是关闭顶栏的自动排布&lt;br>
&lt;code>PaneTitle=&amp;quot;Test&amp;quot;&lt;/code>就是会显示在最上面的那行字，展开时会显示&lt;br>
&lt;code>PaneDisplayMode=&amp;quot;Auto&amp;quot;&lt;/code>这里显示了自动展开，就是最大化窗口时会自动展开&lt;br>
&lt;code>ItemInvoked=&amp;quot;NavigationView_ItemInvoked&amp;quot;&lt;/code>这个是实现导航最关键的部分，后面讲&lt;/p>
&lt;p>&lt;code>ui:NavigationViewItem&lt;/code>里别的应该都能看懂&lt;br>
就是&lt;code>Tag&lt;/code>这个是最关键的，规范的话里面要填上要导航页面对应的类型全名&lt;br>
就是对应页面的&lt;code>namespace.类名&lt;/code>，因为按规范导航会用到&lt;code>Type&lt;/code>来判断&lt;br>
(估计是因为微软文档写的是用&lt;code>Frame&lt;/code>实现页面导航)&lt;/p>
&lt;h3 id="xaml里要干的事">.xaml里要干的事
&lt;/h3>&lt;p>在&lt;code>ui:NavigationView&lt;/code>里写上&lt;code>ItemInvoked=&amp;quot;NavigationView_ItemInvoked&amp;quot;&lt;/code>，名字随意&lt;br>
在&lt;code>ui:NavigationViewItem&lt;/code>里正确写上&lt;code>Tag&lt;/code>&lt;br>
给&lt;code>UserControl&lt;/code>起个名，好让我们在&lt;code>.cs&lt;/code>拿到对象&lt;br>
剩下的事就交给&lt;code>.cs&lt;/code>了&lt;/p>
&lt;h3 id="cs里要干的事">.cs里要干的事
&lt;/h3>&lt;p>按上面的样式写就可以了&lt;/p>
&lt;h3 id="大致的调用过程">大致的调用过程
&lt;/h3>&lt;p>在&lt;code>NavigationView&lt;/code>里面切换页面会触发&lt;code>ItemInvoked&lt;/code>绑定的事件&lt;br>
在&lt;code>ItemInvoked&lt;/code>绑定的方法中，先判定是不是要切换到&lt;code>Setting&lt;/code>的页面&lt;br>
&lt;code>(args.IsSettingsInvoked==true)&lt;/code>
(因为这里的&lt;code>NavigationView&lt;/code>没有设置&lt;code>IsSettingsVisible=&amp;quot;False&amp;quot;&lt;/code>)&lt;br>
然后判定&lt;code>args.InvokedItemContainer!=null&lt;/code>&lt;br>
这两条路径都会调用导航方法&lt;code>NavigationView_Navigate&lt;/code>&lt;br>
这个导航方法会要求传入一个&lt;code>Type&lt;/code>和一个&lt;code>NavigationTransitionInfo&lt;/code>&lt;br>
(&lt;code>NavigationTransitionInfo&lt;/code>在这里确实没啥用)&lt;br>
这个&lt;code>Type&lt;/code>用来判断具体要切换到哪个页面&lt;/p>
&lt;p>其实&lt;code>Tag&lt;/code>随便写也没啥问题，主要看写的导航方法是什么&lt;br>
这里我写的代码极致精简的话完全可以初始化一个&lt;code>Dictionary&amp;lt;string,object&amp;gt;&lt;/code>&lt;br>
然后直接在&lt;code>ItemInvoked&lt;/code>绑定的方法中切换就可以了&lt;br>
像这样&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> TestProject
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">partial&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ModernUITest&lt;/span> : Window
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Dictionary&amp;lt;&lt;span style="color:#66d9ef">string&lt;/span>, &lt;span style="color:#66d9ef">object&lt;/span>&amp;gt; pages;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> ModernUITest()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InitializeComponent();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pages = &lt;span style="color:#66d9ef">new&lt;/span> Dictionary&amp;lt;&lt;span style="color:#66d9ef">string&lt;/span>, &lt;span style="color:#66d9ef">object&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#e6db74">&amp;#34;Page1&amp;#34;&lt;/span>,&lt;span style="color:#66d9ef">new&lt;/span> PageTest1()},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#e6db74">&amp;#34;Page2&amp;#34;&lt;/span>,&lt;span style="color:#66d9ef">new&lt;/span> PageTest2()},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#e6db74">&amp;#34;Setting&amp;#34;&lt;/span>,&lt;span style="color:#66d9ef">new&lt;/span> SettingPage()},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UC.Content = pages[&lt;span style="color:#e6db74">&amp;#34;Page1&amp;#34;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> NavigationView_ItemInvoked(ModernWpf.Controls.NavigationView sender, ModernWpf.Controls.NavigationViewItemInvokedEventArgs args)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (args.IsSettingsInvoked == &lt;span style="color:#66d9ef">true&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UC.Content = pages[&lt;span style="color:#e6db74">&amp;#34;Setting&amp;#34;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (args.InvokedItemContainer != &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UC.Content = pages[args.InvokedItemContainer.Tag.ToString()];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>对应的&lt;code>Tag&lt;/code>再改改就好&lt;/p>
&lt;h2 id="0x03-两种做法的区别">&amp;lt;0x03&amp;gt; 两种做法的区别
&lt;/h2>&lt;p>我个人来看的话，按第一种实现会更加优雅&lt;br>
毕竟前端只要有按钮绑定&lt;code>Command&lt;/code>就好了&lt;br>
但这么做的话就是控件要自己开发了(也确实不是大问题，主要是WPF现在只有维护了)&lt;/p>
&lt;p>第二种方式相对来说没那么优雅，但真正做到了前端的事前端干&lt;br>
按照&lt;code>MVVM&lt;/code>的理论，&lt;code>VM&lt;/code>是用来连接前后端的&lt;br>
但第一种方法我们仅仅是为了前端切换页面就写了个&lt;code>PageViewModel&lt;/code>实现&lt;br>
某种程度上确实不大符合&lt;code>MVVM&lt;/code>的定义&lt;br>
(我知道有别的方式可以不单独写VM，但别的方式确实没单独写VM直观)&lt;br>
而第二种方法把前端的事情聚合在一起，那些新的页面都是在前端new出来的&lt;br>
有啥好处呢，主要还是方便管理吧，功能更加聚合了&lt;/p></description></item><item><title>WPF学习笔记04-MVVM和别的一些东西的补充</title><link>https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B004-mvvm%E5%92%8C%E5%88%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E4%B8%9C%E8%A5%BF%E7%9A%84%E8%A1%A5%E5%85%85/</link><pubDate>Wed, 23 Aug 2023 00:49:54 +0000</pubDate><guid>https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B004-mvvm%E5%92%8C%E5%88%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E4%B8%9C%E8%A5%BF%E7%9A%84%E8%A1%A5%E5%85%85/</guid><description>&lt;h2 id="0x00-相对更正规的mvvm的写法">&amp;lt;0x00&amp;gt; 相对更正规的MVVM的写法
&lt;/h2>&lt;p>前一篇文章不是讲MVVM模型嘛，然后这几天看了看别人写的代码&lt;br>
确实有很多值得学习的地方&lt;/p>
&lt;h3 id="单独拆个baseviewmodel出来">单独拆个BaseViewModel出来
&lt;/h3>&lt;p>之前讲到&lt;code>ViewModel&lt;/code>要实现接口&lt;code>INotifyPropertyChanged&lt;/code>来通知前端属性更改&lt;br>
基本上所有的&lt;code>VM&lt;/code>都要用到的，所以最好就是有个&lt;code>BaseViewModel&lt;/code>类，给所有的&lt;code>VM&lt;/code>继承&lt;br>
具体代码如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> WPFTest.VM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">BaseViewModel&lt;/span> : INotifyPropertyChanged
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">event&lt;/span> PropertyChangedEventHandler PropertyChanged;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">internal&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> NotifyPropertyChanged(&lt;span style="color:#66d9ef">string&lt;/span> propertyName)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PropertyChangedEventHandler handler = PropertyChanged;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (handler != &lt;span style="color:#66d9ef">null&lt;/span>) handler(&lt;span style="color:#66d9ef">this&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> PropertyChangedEventArgs(propertyName));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其实就是把那些代码单独拆出来了&lt;br>
然后所有的&lt;code>VM&lt;/code>继承这个类就好了&lt;/p>
&lt;p>之前也讲到&lt;code>RelayCommand&lt;/code>类也是经常用到的工具类&lt;br>
所以一般这两个类的文件会放在同一个文件夹下&lt;/p>
&lt;p>这里的命名空间也进行了规范(我这里为了简单就只写缩写了)&lt;br>
反正就是&lt;code>M/V/VM&lt;/code>分三块地就行了&lt;br>
具体还是按着规范怎么舒服怎么来&lt;/p>
&lt;h3 id="另一种更舒适的方式添加datacontext">另一种更舒适的方式添加DataContext
&lt;/h3>&lt;p>之前在前端引入&lt;code>VM&lt;/code>的上下文是靠对应&lt;code>.cs&lt;/code>文件里加&lt;code>this.DataContext=this;&lt;/code>实现&lt;br>
现在有相对舒适的做法&lt;br>
首先要在&lt;code>.xaml&lt;/code>的&lt;code>xmlns&lt;/code>中引入命名空间&lt;br>
然后加入具体控件的&lt;code>DataContext&lt;/code>&lt;br>
具体要添加的代码如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:vm=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;clr-namespace:WPFTest.VM&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;vm:ViewModel/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Window.DataContext&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里的&lt;code>vm&lt;/code>可以随便改的，&lt;code>ViewModel&lt;/code>是具体的&lt;code>VM&lt;/code>&lt;br>
这样写的话就尽可能避开对应的&lt;code>.cs&lt;/code>，尽可能把前端实现交给&lt;code>.xaml&lt;/code>&lt;/p>
&lt;h2 id="0x01-关于窗口透明化">&amp;lt;0x01&amp;gt; 关于窗口透明化
&lt;/h2>&lt;p>之前是在Window标签里设置&lt;code>AllowTransparency=True&lt;/code>和&lt;code>Background=&amp;quot;Transparent&amp;quot;&lt;/code>来实现&lt;br>
但这样实现的窗口性能会受很大影响(相关分析可以看&lt;a class="link" href="https://lindexi.gitee.io/post/WPF-%E4%BB%8E%E6%9C%80%E5%BA%95%E5%B1%82%E6%BA%90%E4%BB%A3%E7%A0%81%E4%BA%86%E8%A7%A3-AllowsTransparency-%E6%80%A7%E8%83%BD%E5%B7%AE%E7%9A%84%E5%8E%9F%E5%9B%A0.html" target="_blank" rel="noopener"
>大佬lindexi的博客&lt;/a>)&lt;br>
简单来说就是这样写会相对频繁的申请内存，让CPU和内存的负荷加大&lt;br>
所以怎么办呢，我们也可以通过&lt;code>WindowChrome&lt;/code>实现&lt;br>
更多的信息可以看&lt;a class="link" href="https://blog.walterlv.com/post/wpf-transparent-window-without-allows-transparency.html" target="_blank" rel="noopener"
>大佬walterlv的博客&lt;/a>&lt;br>
还有&lt;a class="link" href="https://www.cnblogs.com/choumengqizhigou/p/15739993.html" target="_blank" rel="noopener"
>大佬丑萌气质狗的博客&lt;/a>&lt;br>
我这里就接着我的代码改改了&lt;/p>
&lt;p>具体修改的代码如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--前一个是隐藏window默认控件的，后一个是仅允许最小化的意思--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--具体也不清楚为啥，后一个必须是CanMinimize或NoResize才有透明--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">WindowStyle=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;None&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ResizeMode=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;CanMinimize&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--修改WindowChrome--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;WindowChrome.WindowChrome&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;WindowChrome&lt;/span> &lt;span style="color:#a6e22e">GlassFrameThickness=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;-1&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/WindowChrome.WindowChrome&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--别的代码--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--在Template里设置背景透明，一定别忘加ContentPresenter--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Window.Template&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ControlTemplate&lt;/span> &lt;span style="color:#a6e22e">TargetType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Window&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Border&lt;/span> &lt;span style="color:#a6e22e">Background=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Transparent&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Border&lt;/span> &lt;span style="color:#a6e22e">CornerRadius=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Margin=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Border.Background&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;LinearGradientBrush&lt;/span> &lt;span style="color:#a6e22e">StartPoint=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0,0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">EndPoint=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0,1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GradientStop&lt;/span> &lt;span style="color:#a6e22e">Color=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#392669&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Offset=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GradientStop&lt;/span> &lt;span style="color:#a6e22e">Color=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#46204F&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Offset=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/LinearGradientBrush&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Border.Background&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Border.Effect&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;DropShadowEffect&lt;/span> &lt;span style="color:#a6e22e">Color=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Gray&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ShadowDepth=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">BlurRadius=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Opacity=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;.5&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Direction=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Border.Effect&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ContentPresenter&lt;/span> &lt;span style="color:#a6e22e">ClipToBounds=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;True&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Border&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Border&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ControlTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Window.Template&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--别的控件--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>还有我们原来负责最小化和关闭程序的两个按钮要加上&lt;code>WindowChrome.IsHitTestVisibleInChrome=&amp;quot;True&amp;quot;&lt;/code>&lt;br>
这个原理在丑萌气质狗的博客里有讲&lt;/p>
&lt;p>(其实建议不搞异型窗口，容易出很多莫名其妙的问题)&lt;/p>
&lt;h2 id="0x02-一些常用的nuget包">&amp;lt;0x02&amp;gt; 一些常用的Nuget包
&lt;/h2>&lt;p>&lt;code>WPF&lt;/code>的强大还体现在有很多&lt;code>Nuget&lt;/code>包&lt;br>
这些包大多是些&lt;code>UI&lt;/code>组件，使&lt;code>WPF&lt;/code>也可以方便的实现现代化的&lt;code>UI&lt;/code>&lt;br>
我自己在研究的有&lt;a class="link" href="https://github.com/Kinnara/ModernWpf" target="_blank" rel="noopener"
>ModernWPF&lt;/a>和&lt;a class="link" href="https://github.com/sourcechord/FluentWPF" target="_blank" rel="noopener"
>FluentWPF&lt;/a>&lt;br>
&lt;code>MordernWPF&lt;/code>提供了些现代化的窗口和组件&lt;br>
&lt;code>FluentWPF&lt;/code>实现了&lt;code>Fluent&lt;/code>设计的&lt;code>UI&lt;/code>，看着好看很多&lt;br>
这两个用得应该还算广吧(我在很多的WPF项目里看到有用的)&lt;br>
性能方面还没怎么试(没研究明白)&lt;/p>
&lt;p>还有一个不是专门给&lt;code>WPF&lt;/code>用的，而是方便&lt;code>MVVM&lt;/code>设计的&lt;br>
叫&lt;code>CommunityToolkit.Mvvm&lt;/code>，很好用的&lt;br>
平时我们写&lt;code>MVVM&lt;/code>模式总是要像最上面一样写一个&lt;code>BaseViewModel&lt;/code>还有一个&lt;code>RelayCommand&lt;/code>&lt;br>
这些常用的基础类已经在这个包里写好了&lt;br>
尤其是这玩意&lt;code>8.0&lt;/code>版本加入了源代码生成器的特性，现在写属性和前端通知就很方便&lt;br>
具体可以看&lt;a class="link" href="https://www.bilibili.com/video/BV12x4y177qB" target="_blank" rel="noopener"
>B站up-十月的寒流的视频&lt;/a>&lt;br>
(人家是真大佬，他的视频做的都很不错的)&lt;br>
(所以我的博客就摸了😋)&lt;/p></description></item><item><title>WPF学习笔记03-MVVM模型</title><link>https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B003-mvvm%E6%A8%A1%E5%9E%8B/</link><pubDate>Sat, 22 Jul 2023 17:39:25 +0000</pubDate><guid>https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B003-mvvm%E6%A8%A1%E5%9E%8B/</guid><description>&lt;h2 id="0x00-mvvm模型介绍">&amp;lt;0x00&amp;gt; MVVM模型介绍
&lt;/h2>&lt;p>&lt;code>MVVM模型&lt;/code>并不是一个编程的语法，而是一种设计思路&lt;br>
整体分三块(&lt;code>M/V/VM&lt;/code>)&lt;br>
&lt;code>M&lt;/code>(Model)指数据模型，差不多就是程序的后端部分&lt;br>
&lt;code>V&lt;/code>(View)指界面，就是程序前端&lt;br>
&lt;code>VM&lt;/code>(View Model)，这个不大好翻译，其实就是负责前后端连接&lt;/p>
&lt;p>这样做有什么好处&lt;br>
简单说就是低耦合高内聚(网上都这么说的)&lt;br>
换句话说就是修改时更加的灵活，架构更加明白&lt;/p>
&lt;p>&lt;code>MVVM模型&lt;/code>是从&lt;code>MVC模型&lt;/code>发展过来的，主要解决的就是开发过程中代码结构混乱的问题&lt;br>
比方说开发一个项目，分前端后端，如果不采用这些设计思路，很可能两人各搞各的&lt;br>
要连接前后端，既可以是前端控制后端数据，也可以是后端修改前端显示&lt;br>
这样势必会造成整个项目的混乱，不好管理&lt;br>
所以&lt;code>MVVM模型&lt;/code>引入了&lt;code>VM&lt;/code>作为前后端的中间层&lt;br>
前端的&lt;code>V&lt;/code>可以通过&lt;code>VM&lt;/code>修改&lt;code>M&lt;/code>，后端的&lt;code>M&lt;/code>也可以通过&lt;code>VM&lt;/code>通知前端的&lt;code>V&lt;/code>要界面更新&lt;br>
这样的话，前后端本身就差不多分离了，前后端开发互不干扰&lt;br>
反正最后都是靠写一个&lt;code>VM&lt;/code>连接在一起的，当然相应的代码量就多了&lt;/p>
&lt;p>&lt;img src="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B003-mvvm%E6%A8%A1%E5%9E%8B/picture/1.png"
width="1270"
height="681"
srcset="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B003-mvvm%E6%A8%A1%E5%9E%8B/picture/1_hu10220759246820115175.png 480w, https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B003-mvvm%E6%A8%A1%E5%9E%8B/picture/1_hu1984363372978414251.png 1024w"
loading="lazy"
alt="大致架构图"
class="gallery-image"
data-flex-grow="186"
data-flex-basis="447px"
>&lt;/p>
&lt;p>总之，&lt;code>MVVM模型&lt;/code>不是开发必须的，如果就一个人随便写写，那么肯定是怎么舒服怎么来的&lt;br>
如果是稍微大一点的项目，不采用合适的开发模式，到时候管理代码有的受的&lt;/p>
&lt;h2 id="0x01-如何在wpf中实现mvvm">&amp;lt;0x01&amp;gt; 如何在WPF中实现MVVM
&lt;/h2>&lt;p>WPF里面不是有些&lt;code>.xaml&lt;/code>的文件嘛，这些就是我们的&lt;code>V&lt;/code>&lt;br>
然后在整个工程中，我们还可以新建很多的&lt;code>.cs&lt;/code>文件(这个看你用什么&lt;code>.net&lt;/code>的语言)&lt;br>
这些&lt;code>.cs&lt;/code>文件就是我们的&lt;code>M&lt;/code>和&lt;code>VM&lt;/code>&lt;/p>
&lt;p>当然，为了区分方便，通常会在文件后面跟上后缀&lt;br>
比如&lt;code>*M.cs&lt;/code>代表这个文件描述的是一个数据模型&lt;br>
&lt;code>*VM.cs&lt;/code>代表这个文件描述的是一个&lt;code>VM&lt;/code>&lt;br>
反正怎么习惯怎么来就是&lt;/p>
&lt;p>在这篇博客里，我的文件命名没有这么这么规范&lt;br>
因为就像之前说的，&lt;code>MVVM&lt;/code>只是一种设计思路&lt;/p>
&lt;h2 id="0x02-正式开始实现">&amp;lt;0x02&amp;gt; 正式开始实现
&lt;/h2>&lt;p>首先先分析我们的需求，就拿我们之前的计算器吧&lt;br>
前端的实现我们已经有了，就是那个&lt;code>.xaml&lt;/code>文件&lt;/p>
&lt;p>后端我们就要先分析下了，怎么搞一个计算器的后端&lt;br>
首先我们先思考下一个计算器需要维护什么数据&lt;br>
因为我们打算实现的就是个日常的计算器而不是图形计算器之类的东西&lt;br>
所以肯定要维护一条当前的结果&lt;br>
然后还要一个标志符来保存当前选定的运算&lt;br>
同时还要有个&lt;code>flag&lt;/code>来表明正在计算&lt;br>
最后还要维护一个显示的值&lt;br>
所以总共是要维护4条数据&lt;/p>
&lt;p>所以对我们的计算器后端文件如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//Calculator.cs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//常见的引用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> WPFTest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Calculator&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//这里按道理应该用private，通过对象方法调用这些变量，这里偷下懒&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">internal&lt;/span> &lt;span style="color:#66d9ef">bool&lt;/span> flag = &lt;span style="color:#66d9ef">false&lt;/span>; &lt;span style="color:#75715e">//表示正在计算&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">internal&lt;/span> &lt;span style="color:#66d9ef">int?&lt;/span> calculate = &lt;span style="color:#66d9ef">null&lt;/span>; &lt;span style="color:#75715e">//标识当前的运算符&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">internal&lt;/span> &lt;span style="color:#66d9ef">double?&lt;/span> ans = &lt;span style="color:#66d9ef">null&lt;/span>; &lt;span style="color:#75715e">//存储当前的结果&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">internal&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span> Display = &lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>; &lt;span style="color:#75715e">//当前显示的值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Calculate() &lt;span style="color:#75715e">//计算方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> (calculate)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ans += Double.Parse(Display);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ans -= Double.Parse(Display);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ans *= Double.Parse(Display);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ans /= Double.Parse(Display);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接下来就是来写我们的&lt;code>VM&lt;/code>部分&lt;br>
我这个写得比较繁琐，但就是那个意思&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//ViewModel.cs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//常见的引用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> WPFTest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//要实现接口INotifyPropertyChanged&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ViewModel&lt;/span> : INotifyPropertyChanged
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//实现接口的要求，看不懂没关系，这么写就好&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">event&lt;/span> PropertyChangedEventHandler PropertyChanged;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> NotifyPropertyChanged(&lt;span style="color:#66d9ef">string&lt;/span> propertyName)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PropertyChangedEventHandler handler = PropertyChanged;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(handler != &lt;span style="color:#66d9ef">null&lt;/span>) handler(&lt;span style="color:#66d9ef">this&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> PropertyChangedEventArgs(propertyName));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//声明一个Calculator对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">readonly&lt;/span> Calculator _calculator = &lt;span style="color:#66d9ef">new&lt;/span> Calculator();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//声明一个Display属性，关键啊&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span> Display
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">get&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> _calculator.Display; &lt;span style="color:#75715e">//定义get，挺正常的写法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">set&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _calculator.Display = &lt;span style="color:#66d9ef">value&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NotifyPropertyChanged(&lt;span style="color:#e6db74">&amp;#34;Display&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//定义set，最后调用的方法通知属性已更改，让前端更新显示&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> MinusSign_Click() &lt;span style="color:#75715e">//减法的实现&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (_calculator.flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (Display[&lt;span style="color:#ae81ff">0&lt;/span>] == &lt;span style="color:#e6db74">&amp;#39;-&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Display = Display.Substring(&lt;span style="color:#ae81ff">1&lt;/span>, Display.Length - &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Display = &lt;span style="color:#e6db74">&amp;#34;-&amp;#34;&lt;/span> + Display;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//后面方法的实现略&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> ICommand ButtonMinusSign &lt;span style="color:#75715e">//将减法方法声明成属性&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">get&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> RelayCommand(MinusSign_Click);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//RelayCommand后面讲&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//后面的方法属性声明略&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>Display&lt;/code>要声明成属性的样式，因为&lt;code>xaml&lt;/code>里面能绑定的量要是属性&lt;br>
所以后面的按钮方法都要声明成属性，这样才能在&lt;code>xaml&lt;/code>里面绑定&lt;/p>
&lt;p>当然这里还出现了两个新东西&lt;br>
一个是接口&lt;code>INotifyPropertyChanged&lt;/code>，还有&lt;code>RelayCommand&lt;/code>&lt;br>
&lt;code>INotifyPropertyChanged&lt;/code>字面意思就是&lt;code>通知属性更改&lt;/code>&lt;br>
就是说这个类里面有属性在更改时需要通知前端，让前端显示的东西也跟着改&lt;br>
这个接口要求实现一个通知方法，反正就按上面的抄就好了&lt;br>
(大体的原理就是发起一个事件，传回去，让前端知道有东西变了，再回来看)&lt;br>
&lt;code>RelayCommand&lt;/code>是自己实现的类，代码如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//RelayCommand.cs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//常见的声明&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> WPFTest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//实现ICommand接口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">internal&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">RelayCommand&lt;/span> : ICommand
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//一个只读的Action属性，存储指令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Action ExecuteAction { &lt;span style="color:#66d9ef">get&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">event&lt;/span> EventHandler CanExecuteChanged;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//构造函数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> RelayCommand(Action executeAction)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ExecuteAction = executeAction;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//表示能不能执行(我们这就默认能执行)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">bool&lt;/span> CanExecute(&lt;span style="color:#66d9ef">object&lt;/span> parameter)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//调用方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Execute(&lt;span style="color:#66d9ef">object&lt;/span> parameter)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ExecuteAction();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>就是这样，本质就是用泛型委托打包了个方法&lt;br>
这个类也方便我们把方法打包成一个属性，好绑定到&lt;code>xaml&lt;/code>中&lt;/p>
&lt;p>最后终于是我们的前端界面了&lt;br>
其实多的不用改&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#a6e22e">x:Class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;WPFTest.MainWindow&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:d=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.microsoft.com/expression/blend/2008&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:mc=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.openxmlformats.org/markup-compatibility/2006&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:local=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;clr-namespace:WPFTest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">d:DataContext=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{d:DesignInstance Type=local:ViewModel}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">mc:Ignorable=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;d&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;400&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Width=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;300&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">WindowStartupLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;CenterScreen&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">AllowsTransparency=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;True&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Background=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Transparent&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">WindowStyle=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;None&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--这里指定了DataContext，让xaml能找到对应的属性--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Window.Resources&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Style&lt;/span> &lt;span style="color:#a6e22e">TargetType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Margin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;6&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;FontSize&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;24&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Foreground&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;White&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Template&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter.Value&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ControlTemplate&lt;/span> &lt;span style="color:#a6e22e">TargetType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Border&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;border&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Background=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#241238&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">CornerRadius=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;TextBlock&lt;/span> &lt;span style="color:#a6e22e">Text=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{TemplateBinding Content}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">VerticalAlignment=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Center&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">HorizontalAlignment=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Center&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Border&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ControlTemplate.Triggers&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Trigger&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;IsMouseOver&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;True&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">TargetName=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;border&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Background&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#190D24&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Trigger&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Trigger&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;IsPressed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;True&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">TargetName=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;border&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Background&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Black&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Trigger&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ControlTemplate.Triggers&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ControlTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Setter.Value&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Setter&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Style&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Window.Resources&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Border&lt;/span> &lt;span style="color:#a6e22e">CornerRadius=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">MouseMove=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Border_MouseMove&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Margin=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Border.Background&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;LinearGradientBrush&lt;/span> &lt;span style="color:#a6e22e">StartPoint=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0,0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">EndPoint=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0,1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GradientStop&lt;/span> &lt;span style="color:#a6e22e">Color=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#392669&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Offset=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GradientStop&lt;/span> &lt;span style="color:#a6e22e">Color=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#46204F&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Offset=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/LinearGradientBrush&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Border.Background&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Border.Effect&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;DropShadowEffect&lt;/span> &lt;span style="color:#a6e22e">Color=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Gray&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ShadowDepth=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">BlurRadius=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Opacity=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;.5&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Direction=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Border.Effect&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid.RowDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition&lt;/span> &lt;span style="color:#a6e22e">Height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;auto&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition&lt;/span> &lt;span style="color:#a6e22e">Height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;auto&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid.RowDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;StackPanel&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Orientation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Horizontal&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">HorizontalAlignment=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Right&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Minimize&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Minimize_Click&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button.Template&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ControlTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Ellipse&lt;/span> &lt;span style="color:#a6e22e">Width=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;16&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;16&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Fill=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#F0DC4E&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ControlTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Button.Template&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Button&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Close&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Close_Click&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button.Template&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ControlTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Ellipse&lt;/span> &lt;span style="color:#a6e22e">Width=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;16&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;16&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Fill=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#F0443E&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ControlTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Button.Template&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Button&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/StackPanel&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;TextBlock&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Answer&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Text=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding Display}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">FontSize=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;28&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">HorizontalAlignment=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Right&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Margin=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Foreground=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;White&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--Text这里绑定的是显示的内容--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid.ColumnDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ColumnDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ColumnDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ColumnDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ColumnDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid.ColumnDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid.RowDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid.RowDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_MinusSign&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Command=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{Binding ButtonMinusSign}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;±&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--Command这里绑定的就是按钮的指令--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--后面的Button就不写了--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Border&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其实就打注释的那三处要变，别的都不用改&lt;/p>
&lt;h2 id="0x03-mvvm模型到底有什么用">&amp;lt;0x03&amp;gt; MVVM模型到底有什么用
&lt;/h2>&lt;p>说实在的，我刚学完这模型我也是说这玩意有啥用&lt;br>
甚至觉得我是不是少看了些什么&lt;br>
因为从逻辑上，这么写代码，代码量多了，但功能都没变过&lt;br>
就感觉这么写很多余&lt;/p>
&lt;p>但实际上，我思考了好一阵(也是这篇博客拖这么久写完的原因)&lt;br>
这个项目太小了，体现不出来&lt;br>
想象一个稍微大点的项目，前后端分别开发的&lt;br>
假设最终就两个主要的文件，一个前端，一个后端&lt;br>
如果说后端突然抽风要改方法名，那前端也得跟着改(这就是耦合的情况)&lt;br>
但如果用&lt;code>MVVM&lt;/code>模型，在前后端之间再加层&amp;quot;胶水&amp;quot;层&lt;br>
这样当后端改名的时候，&amp;ldquo;胶水&amp;quot;层的名字没改，前端就不用改，提高了效率&lt;br>
(这样也叫解耦)&lt;/p>
&lt;p>别的好处我也很难讲了，毕竟目前我的开发经验不多&lt;br>
正如我最前面写的，这个只是个思想，并不是什么语法之类的&lt;br>
(总算写完了)&lt;/p></description></item><item><title>WPF学习笔记02-简单美化计算器</title><link>https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B002-%E7%AE%80%E5%8D%95%E7%BE%8E%E5%8C%96%E8%AE%A1%E7%AE%97%E5%99%A8/</link><pubDate>Mon, 17 Jul 2023 01:04:58 +0000</pubDate><guid>https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B002-%E7%AE%80%E5%8D%95%E7%BE%8E%E5%8C%96%E8%AE%A1%E7%AE%97%E5%99%A8/</guid><description>&lt;h2 id="0x00-wpf的界面美化挺方便的">&amp;lt;0x00&amp;gt; WPF的界面美化挺方便的
&lt;/h2>&lt;p>就研究了一小时不到，成功让计算器的UI上升了一个档次&lt;/p>
&lt;p>先看成果(因为相较于之前的界面确实帅多了)&lt;br>
&lt;img src="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B002-%E7%AE%80%E5%8D%95%E7%BE%8E%E5%8C%96%E8%AE%A1%E7%AE%97%E5%99%A8/picture/1.png"
width="300"
height="400"
srcset="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B002-%E7%AE%80%E5%8D%95%E7%BE%8E%E5%8C%96%E8%AE%A1%E7%AE%97%E5%99%A8/picture/1_hu16039017282033186944.png 480w, https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B002-%E7%AE%80%E5%8D%95%E7%BE%8E%E5%8C%96%E8%AE%A1%E7%AE%97%E5%99%A8/picture/1_hu7583576121218424107.png 1024w"
loading="lazy"
alt="全新界面"
class="gallery-image"
data-flex-grow="75"
data-flex-basis="180px"
>&lt;br>
现代多了&lt;br>
(为了显示效果改了下比例)&lt;br>
咱们一块块慢慢讲&lt;/p>
&lt;h2 id="0x01-如何实现自定义窗口控件与圆角窗口">&amp;lt;0x01&amp;gt; 如何实现自定义窗口控件与圆角窗口
&lt;/h2>&lt;p>首先看这个界面，比较特殊的就是这个窗口有圆角&lt;br>
而且右上角的按钮不是&lt;code>Windows&lt;/code>的默认样式&lt;br>
(红色的按钮是关闭，黄色的是最小化窗口)&lt;/p>
&lt;p>要做到这一点，我们要让窗口运行在无边框的模式下&lt;br>
但运行在无边框模式下后，原先的窗口控件也没有了&lt;br>
所以要自己写按钮实现窗口关闭和窗口最小化的功能&lt;br>
(窗口最大化也差不多的逻辑，但这里不需要实现)&lt;/p>
&lt;h3 id="无边框窗口">无边框窗口
&lt;/h3>&lt;p>首先要设置个无边框的窗口&lt;br>
我们需要在&lt;code>&amp;lt;Window&amp;gt;&lt;/code>标签里面加上&lt;code>WindowStyle=&amp;quot;None&amp;quot;&lt;/code>就可以实现无边框的窗口了&lt;/p>
&lt;p>(@ 23-07-19)&lt;br>
其实更正规的做法应该是用&lt;code>WindowChrome&lt;/code>，当时不大会，这个只能说是个下策&lt;br>
这个方法本质上是抛弃了非工作区的控件而在工作区重写这些窗口控件，效率有点低&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#a6e22e">x:Class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;WPFTest.MainWindow&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:d=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.microsoft.com/expression/blend/2008&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:mc=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.openxmlformats.org/markup-compatibility/2006&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:local=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;clr-namespace:WPFTest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">mc:Ignorable=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;d&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;400&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Width=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;300&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">WindowStartupLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;CenterScreen&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">AllowsTransparency=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;True&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Background=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Transparent&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">WindowStyle=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;None&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--...--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>(差不多就这样，没讲的属性后面讲)&lt;/p>
&lt;p>这样，我们确实获得了一个无边框的窗口&lt;br>
但这样有几个问题&lt;br>
第一，窗口的圆角无法调整&lt;br>
第二，窗口不能拖动&lt;/p>
&lt;h4 id="解决第一个问题">解决第一个问题
&lt;/h4>&lt;p>这意味着我们要自己写一个窗口实现&lt;br>
(其实不难)&lt;br>
系统的窗口相当于最下面的图层&lt;br>
现在这个窗口不能满足我们的需求，所以我们要先隐藏自带的窗口&lt;br>
在&lt;code>&amp;lt;Window&amp;gt;&lt;/code>标签里面加上&lt;code>AllowsTransparency=&amp;quot;True&amp;quot;&lt;/code>和&lt;code>Background=&amp;quot;Transparent&amp;quot;&lt;/code>&lt;br>
这两条属性表示允许窗口透明并设置窗口背景为透明&lt;/p>
&lt;p>下面我们要自己写一个背景来代替原来的窗口背景&lt;br>
我们之前不是拿一个&lt;code>&amp;lt;Grid&amp;gt;&lt;/code>包裹所有的控件吗&lt;br>
既然是背景，那层级肯定是比这个&lt;code>Grid&lt;/code>更高的&lt;br>
所以只需要在&lt;code>&amp;lt;Grid&amp;gt;&lt;/code>外面再套个&lt;code>&amp;lt;Border&amp;gt;&lt;/code>就好&lt;br>
(&lt;code>&amp;lt;Border&amp;gt;&lt;/code>可以简单理解为绘制一个矩形)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--差不多像这样--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Border&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--...--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Border&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>&amp;lt;Border&amp;gt;&lt;/code>也可以设置不少的属性&lt;br>
为了实现窗口圆角，设置下&lt;code>CornerRadius&lt;/code>就好&lt;/p>
&lt;h4 id="解决第二个问题">解决第二个问题
&lt;/h4>&lt;p>在原生的窗口中，窗口的移动是靠上面的那一条的&lt;br>
相当于窗口移动事件是绑定在那一条控件上的&lt;/p>
&lt;p>现在我们隐藏了，所以要自己去绑定这个窗口移动事件&lt;br>
现在刚好写了个&lt;code>&amp;lt;Border&amp;gt;&lt;/code>，这个可以绑定窗口移动事件&lt;br>
在&lt;code>&amp;lt;Border&amp;gt;&lt;/code>绑定&lt;code>MouseMove&lt;/code>事件(就是添加个属性)&lt;br>
这个相当于之前给&lt;code>Button&lt;/code>绑定&lt;code>Click&lt;/code>事件，要在对应&lt;code>.cs&lt;/code>里面实现功能&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Border_MouseMove(&lt;span style="color:#66d9ef">object&lt;/span> sender, MouseEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (e.LeftButton == MouseButtonState.Pressed)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.DragMove();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>加上这段代码就好&lt;br>
现在这个窗口就能拖动了&lt;/p>
&lt;h3 id="自定义窗口控件按钮">自定义窗口控件按钮
&lt;/h3>&lt;p>本质上就是自己写个按钮，一个用来关闭程序，一个用来最小化&lt;br>
(当然为了能放下这俩按钮还需要对页面布局做个小改动，这里就不写了)&lt;br>
直接贴代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//关闭窗口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Close_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.Close();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//最小化窗口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Minimize_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.WindowState = WindowState.Minimized;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这两个方法绑定到对应的按钮就好&lt;/p>
&lt;h2 id="0x02-如何实现圆角的按钮">&amp;lt;0x02&amp;gt; 如何实现圆角的按钮
&lt;/h2>&lt;p>要实现圆角的按钮，我们需要重写按钮的绘制方法&lt;br>
在&lt;code>xaml&lt;/code>中，这个重写其实也挺简单的，我们仅需更改按钮的模板&lt;/p>
&lt;p>更改模板的方法有两种，先讲怎么更改单个按钮的模板&lt;br>
(关闭窗口和最小化窗口的按钮样式就是这么实现的)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button.Template&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ControlTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--具体的实现--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ControlTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Button.Template&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Button&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在具体的实现里面写上绘制的样式就行了&lt;/p>
&lt;p>如果有很多的按钮需要更改为一个统一的样式，我们需要在&lt;code>&amp;lt;Style&amp;gt;&lt;/code>中更改模板&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Style&lt;/span> &lt;span style="color:#a6e22e">TargetType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--其他Setter--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Template&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter.Value&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ControlTemplate&lt;/span> &lt;span style="color:#a6e22e">TargetType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--具体的实现--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ControlTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Setter.Value&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Setter&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Style&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意，如果模板要绑定属性，&lt;code>TargetType=&amp;quot;Button&amp;quot;&lt;/code>不能省&lt;br>
(&lt;code>{TemplateBinding Content}&lt;/code>就是个绑定的语法，相当于拷贝&lt;code>Button.Content&lt;/code>的内容)&lt;br>
(具体看原代码吧，绑定确实不大好解释)&lt;/p>
&lt;p>更改过模板后，原来的触发器也给替换掉了，要我们自己再写一套&lt;br>
(就是比方说鼠标放按钮上，按钮的颜色变深一点之类的)&lt;br>
这个就要在&lt;code>&amp;lt;ControlTemplate&amp;gt;&lt;/code>块中加上&lt;code>&amp;lt;ControlTemplate.Triggers&amp;gt;&lt;/code>块&lt;br>
再在里面写上若干&lt;code>&amp;lt;Trigger&amp;gt;&lt;/code>即可&lt;br>
&lt;code>&amp;lt;Trigger&amp;gt;&lt;/code>就用来控制前端的显示，不管后端的&lt;/p>
&lt;p>&lt;code>&amp;lt;Trigger&amp;gt;&lt;/code>中有&lt;code>Property&lt;/code>(设置触发器类型)和&lt;code>Value&lt;/code>(设置触发值)&lt;br>
常用的&lt;code>Property&lt;/code>有&lt;code>IsMouseOn&lt;/code>(鼠标在不在上面)和&lt;code>IsPressed&lt;/code>(鼠标有没有按下)&lt;br>
&lt;code>&amp;lt;Trigger&amp;gt;&lt;/code>块中通过&lt;code>&amp;lt;Setter&amp;gt;&lt;/code>来设置样式&lt;br>
这里的&lt;code>&amp;lt;Setter&amp;gt;&lt;/code>需要加上&lt;code>TargetName&lt;/code>(因为可能有好几个需要绘制的东西)&lt;/p>
&lt;h2 id="0x03-如何实现背景的色彩渐变">&amp;lt;0x03&amp;gt; 如何实现背景的色彩渐变
&lt;/h2>&lt;p>添加色彩渐变很简单&lt;br>
&lt;code>&amp;lt;Border&amp;gt;&lt;/code>块中加上这些代码即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Border.Background&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;LinearGradientBrush&lt;/span> &lt;span style="color:#a6e22e">StartPoint=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0,0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">EndPoint=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0,1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GradientStop&lt;/span> &lt;span style="color:#a6e22e">Color=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#392669&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Offset=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GradientStop&lt;/span> &lt;span style="color:#a6e22e">Color=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#46204F&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Offset=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/LinearGradientBrush&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Border.Background&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中&lt;code>&amp;lt;LinearGradientBrush&amp;gt;&lt;/code>指定了线性渐变&lt;br>
&lt;code>StartPoint&lt;/code>与&lt;code>EndPoint&lt;/code>指定了起止点，&lt;code>&amp;quot;0,0&amp;quot;&lt;/code>表示左上角，&lt;code>&amp;quot;0,1&amp;quot;&lt;/code>表示左下角&lt;br>
&lt;code>&amp;lt;GradientStop&amp;gt;&lt;/code>中可以指定渐变的颜色，&lt;code>Offset&lt;/code>相当于颜色在渐变条上的位置&lt;br>
(如果用过些图像处理工具应该是能理解&lt;code>Offset&lt;/code>的功能的)&lt;/p>
&lt;h2 id="0x04-绘制窗口阴影">&amp;lt;0x04&amp;gt; 绘制窗口阴影
&lt;/h2>&lt;p>因为我们已经把原生的窗口干掉了嘛，所以窗口阴影也没了&lt;br>
没窗口阴影的话总是看着有些违和&lt;/p>
&lt;p>添加窗口阴影也很简单&lt;br>
&lt;code>&amp;lt;Border&amp;gt;&lt;/code>块中加上这些代码即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Border.Effect&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;DropShadowEffect&lt;/span> &lt;span style="color:#a6e22e">Color=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Gray&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ShadowDepth=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">BlurRadius=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Opacity=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Direction=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Border.Effect&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>&amp;lt;Border&amp;gt;&lt;/code>中也要调整下&lt;code>Margin&lt;/code>属性，不然阴影可能显示不出&lt;/p>
&lt;h2 id="附录">附录
&lt;/h2>&lt;p>&lt;code>MainWindow.xaml.cs&lt;/code>的代码就不贴了，基本没什么改动&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--MainWindow.xaml--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#a6e22e">x:Class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;WPFTest.MainWindow&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:d=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.microsoft.com/expression/blend/2008&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:mc=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.openxmlformats.org/markup-compatibility/2006&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:local=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;clr-namespace:WPFTest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">mc:Ignorable=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;d&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;400&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Width=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;300&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">WindowStartupLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;CenterScreen&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">AllowsTransparency=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;True&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Background=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Transparent&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">WindowStyle=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;None&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Window.Resources&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Style&lt;/span> &lt;span style="color:#a6e22e">TargetType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Margin&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;6&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;FontSize&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;24&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Foreground&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;White&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Template&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter.Value&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ControlTemplate&lt;/span> &lt;span style="color:#a6e22e">TargetType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Border&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;border&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Background=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#241238&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">CornerRadius=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;TextBlock&lt;/span> &lt;span style="color:#a6e22e">Text=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{TemplateBinding Content}&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">VerticalAlignment=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Center&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">HorizontalAlignment=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Center&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Border&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ControlTemplate.Triggers&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Trigger&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;IsMouseOver&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;True&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">TargetName=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;border&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Background&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#190D24&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Trigger&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Trigger&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;IsPressed&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;True&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">TargetName=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;border&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Background&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Black&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Trigger&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ControlTemplate.Triggers&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ControlTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Setter.Value&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Setter&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Style&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Window.Resources&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Border&lt;/span> &lt;span style="color:#a6e22e">CornerRadius=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">MouseMove=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Border_MouseMove&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Margin=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;5&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Border.Background&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;LinearGradientBrush&lt;/span> &lt;span style="color:#a6e22e">StartPoint=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0,0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">EndPoint=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0,1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GradientStop&lt;/span> &lt;span style="color:#a6e22e">Color=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#392669&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Offset=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;GradientStop&lt;/span> &lt;span style="color:#a6e22e">Color=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#46204F&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Offset=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/LinearGradientBrush&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Border.Background&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Border.Effect&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;DropShadowEffect&lt;/span> &lt;span style="color:#a6e22e">Color=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Gray&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ShadowDepth=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">BlurRadius=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Opacity=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Direction=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Border.Effect&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid.RowDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition&lt;/span> &lt;span style="color:#a6e22e">Height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;auto&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition&lt;/span> &lt;span style="color:#a6e22e">Height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;auto&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid.RowDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;StackPanel&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Orientation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Horizontal&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">HorizontalAlignment=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Right&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Minimize&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Minimize_Click&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button.Template&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ControlTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Ellipse&lt;/span> &lt;span style="color:#a6e22e">Width=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;16&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;16&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Fill=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#F0DC4E&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ControlTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Button.Template&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Button&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Close&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Close_Click&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button.Template&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ControlTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Ellipse&lt;/span> &lt;span style="color:#a6e22e">Width=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;16&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;16&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Fill=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#F0443E&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ControlTemplate&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Button.Template&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Button&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/StackPanel&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;TextBlock&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Answer&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Text=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">FontSize=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;28&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">HorizontalAlignment=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Right&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Margin=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Foreground=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;White&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid.ColumnDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ColumnDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ColumnDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ColumnDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ColumnDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid.ColumnDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid.RowDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid.RowDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_MinusSign&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_MinusSign_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;±&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Clear&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Clear_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;CE&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Backspace&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Backspace_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;←&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num9&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num9_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;9&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num8&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num8_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;8&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num7&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num7_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;7&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num6&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num6_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;6&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num5_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num4&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num4_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;4&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num3&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num3_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num2_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num1_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num0_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.ColumnSpan=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;4&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Dot&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Dot_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;4&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Div&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Div_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Mul&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Mul_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Sub&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Sub_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;-&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Add&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Add_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;+&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Equal&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Equal_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;=&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;4&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Border&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>(经典写博客耗时比写代码多😂)&lt;/p></description></item><item><title>WPF学习笔记01-一个简单的计算器</title><link>https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001-%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8/</link><pubDate>Sat, 15 Jul 2023 20:51:01 +0000</pubDate><guid>https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001-%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8/</guid><description>&lt;h2 id="0x00-我为何选择wpf">&amp;lt;0x00&amp;gt; 我为何选择WPF
&lt;/h2>&lt;p>(@ 23-08-25)&lt;br>
慢慢学了一个月，总算知道为啥现在用&lt;code>WPF&lt;/code>的个人项目不多了&lt;br>
写简单的&lt;code>UI&lt;/code>确实非常方便，但如果要用些现代些的设计就很烦了&lt;br>
非常容易出现些神秘问题&lt;/p>
&lt;p>这个我也说不明白，大概就是因为之前看到有些项目的窗口就是&lt;code>WPF&lt;/code>写的吧&lt;/p>
&lt;p>一定要找个理由就是&lt;code>WPF&lt;/code>的支持丰富&lt;br>
作为一个老UI框架，教程满天飞，更重要的是，用&lt;code>WPF&lt;/code>仍可以设计出现代的UI&lt;br>
(而且相比那些&lt;code>electron&lt;/code>框架来说性能更好，只要不搞跨平台)&lt;/p>
&lt;p>目前在&lt;code>Windows&lt;/code>下，微软这常见的有四套UI框架&lt;br>
分别是：&lt;code>WinFrom&lt;/code>、&lt;code>WPF&lt;/code>、&lt;code>WinUI3&lt;/code>、&lt;code>XAUI&lt;/code>&lt;br>
&lt;code>WinFrom&lt;/code>实在是老，做一些效果动画会比较费力&lt;br>
&lt;code>WPF&lt;/code>虽然也挺老的，但支持的特性足够做些不错的UI了&lt;br>
&lt;code>WinUI3&lt;/code>新是新，但教程不多，文档支持也比较神秘&lt;br>
&lt;code>XAUI&lt;/code>能跨平台，但微软特色，永不推广，而且也比较新，文档比较神秘&lt;/p>
&lt;p>从&lt;code>WPF&lt;/code>开始，微软的UI框架都是要写&lt;code>.xaml&lt;/code>的&lt;br>
所以学会&lt;code>WPF&lt;/code>之后，迁移到微软更新的UI框架的学习成本是相对低的&lt;/p>
&lt;p>目前我体验下来&lt;code>WPF&lt;/code>算是很好入门的了，只需要会一门&lt;code>.net&lt;/code>框架下的语言就可以入门&lt;br>
&lt;code>xaml&lt;/code>语法也不难，可以说看多了也会了&lt;br>
而且微软的看家本领，UI的可视化开发(Visual Studio)，这对效率提升真的很有帮助&lt;/p>
&lt;p>这篇文章的代码来自我自己随便搞的简易计算器&lt;br>
(整个程序就花了一个小时写完，足见&lt;code>WPF&lt;/code>是多方便)&lt;/p>
&lt;h2 id="0x01-wpf的典型结构">&amp;lt;0x01&amp;gt; WPF的典型结构
&lt;/h2>&lt;p>我这里创建的是基于&lt;code>C#&lt;/code>的&lt;code>WPF&lt;/code>项目&lt;/p>
&lt;p>创建完我们可以看到如图的项目结构&lt;br>
&lt;img src="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001-%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8/picture/1.png"
width="279"
height="258"
srcset="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001-%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8/picture/1_hu12635043704618703398.png 480w, https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001-%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8/picture/1_hu17982825976639104812.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="108"
data-flex-basis="259px"
>
差不多就是一个&lt;code>.xaml&lt;/code>文件下套&lt;code>.cs&lt;/code>文件&lt;/p>
&lt;p>其中在&lt;code>App.xaml&lt;/code>文件中，定义了这个应用的基本信息(主要就是启动窗口是哪一个)&lt;br>
&lt;code>MainWindows.xaml&lt;/code>定义了窗口的样式(这个的编辑界面就是一半实时预览窗口，一半是代码编辑器)&lt;br>
下面的&lt;code>.cs&lt;/code>文件可以说描述程序的行为&lt;/p>
&lt;p>简单来说就是&lt;code>.xaml&lt;/code>文件管前端(界面)，&lt;code>.cs&lt;/code>文件管后端(行为)&lt;br>
具体的东西后面再讲&lt;/p>
&lt;h2 id="0x02-xaml的简单语法">&amp;lt;0x02&amp;gt; XAML的简单语法
&lt;/h2>&lt;p>&lt;code>xaml&lt;/code>这玩意就是参考&lt;code>xml&lt;/code>语法的&lt;br>
如果能看懂&lt;code>xml&lt;/code>甚至是&lt;code>html&lt;/code>也能看懂&lt;code>xaml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--MainWindow.xaml--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Window&lt;/span> &lt;span style="color:#a6e22e">x:Class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;WPFTest.MainWindow&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:d=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.microsoft.com/expression/blend/2008&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:mc=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://schemas.openxmlformats.org/markup-compatibility/2006&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:local=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;clr-namespace:WPFTest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">mc:Ignorable=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;d&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Title=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;MainWindow&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;800&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Width=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;800&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Window.Resources&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Style&lt;/span> &lt;span style="color:#a6e22e">TargetType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Margin&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;5&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Setter&lt;/span> &lt;span style="color:#a6e22e">Property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;FontSize&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;30&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Style&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Window.Resources&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid.RowDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition&lt;/span> &lt;span style="color:#a6e22e">Height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;auto&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid.RowDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;TextBlock&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Answer&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Text=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">FontSize=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;30&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">HorizontalAlignment=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Right&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Margin=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid.ColumnDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ColumnDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ColumnDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ColumnDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ColumnDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid.ColumnDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Grid.RowDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;RowDefinition/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid.RowDefinitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_MinusSign&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_MinusSign_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;±&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Clear&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Clear_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;CE&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Backspace&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Backspace_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;←&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num9&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num9_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;9&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num8&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num8_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;8&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num7&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num7_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;7&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num6&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num6_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;6&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num5_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num4&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num4_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;4&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num3&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num3_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num2_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num1_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Num0_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.ColumnSpan=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;4&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Dot&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Dot_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;4&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Div&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Div_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Mul&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Mul_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Sub&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Sub_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;-&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Add&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Add_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;+&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Button&lt;/span> &lt;span style="color:#a6e22e">Name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Equal&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Click=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Button_Equal_Click&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;=&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">Grid.Row=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;4&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Grid&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Window&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>(为了代码高亮正常工作，这里的代码设置为&lt;code>xml&lt;/code>的高亮格式)&lt;br>
一块块掰碎讲&lt;/p>
&lt;h3 id="声明部分">声明部分
&lt;/h3>&lt;p>就是最上面一坨不知道什么东西的部分，随便写写的话根本不需要知道这些是啥，别动就好&lt;br>
(因为我目前也不是很懂这些)&lt;/p>
&lt;h3 id="windowresources">&amp;lt;Window.Resources&amp;gt;
&lt;/h3>&lt;p>这里面我就定义了个&lt;code>Button&lt;/code>类型的&lt;code>Style&lt;/code>&lt;br>
其实就是规定了&lt;code>Button&lt;/code>的一些默认参数&lt;br>
在下面写&lt;code>Button&lt;/code>的时候就不用一个个都写这些东西了&lt;/p>
&lt;p>&lt;code>Style&lt;/code>里面定义了按钮到界面边界的距离(&lt;code>Margin&lt;/code>)有5单位&lt;br>
字体大小(&lt;code>FontSize&lt;/code>)为30个单位&lt;br>
(在&lt;code>WPF&lt;/code>里，并不是以像素为单位，而是按&lt;code>DPI&lt;/code>来确定实际像素单位大小)&lt;/p>
&lt;p>&lt;code>&amp;lt;Style&amp;gt;&lt;/code>里面要指定设置的类型(&lt;code>TargetType&lt;/code>)&lt;br>
在&lt;code>&amp;lt;Style&amp;gt;&lt;/code>块中，用&lt;code>&amp;lt;Setter&amp;gt;&lt;/code>标签来设置类型下面的属性&lt;br>
&lt;code>&amp;lt;Setter&amp;gt;&lt;/code>标签里面&lt;code>Property&lt;/code>选择属性，&lt;code>Value&lt;/code>选择值&lt;/p>
&lt;h3 id="grid">&amp;lt;Grid&amp;gt;
&lt;/h3>&lt;p>在&lt;code>WPF&lt;/code>中，有两种常用的界面布局&lt;br>
分别是：网格布局(&lt;code>&amp;lt;Grid&amp;gt;&lt;/code>)和栈布局(&lt;code>&amp;lt;StackPanel&amp;gt;&lt;/code>)&lt;br>
&lt;code>&amp;lt;Grid&amp;gt;&lt;/code>可以把一块区域分割成一个网格，网格里面可以塞控件&lt;br>
&lt;code>&amp;lt;StackPanel&amp;gt;&lt;/code>就是个栈，所有控件从上到下(从左到右)排列&lt;br>
基本上用这两种布局的互相嵌套能解决绝大多数的布局&lt;br>
我这里的布局选择了&lt;code>&amp;lt;Grid&amp;gt;&lt;/code>里面再套一个&lt;code>&amp;lt;Grid&amp;gt;&lt;/code>&lt;/p>
&lt;h4 id="具体实现">具体实现
&lt;/h4>&lt;p>在&lt;code>&amp;lt;Grid.RowDefinitions&amp;gt;&lt;/code>块里面塞两个&lt;code>&amp;lt;RowDefinition/&amp;gt;&lt;/code>把Grid分成两行&lt;br>
(塞几个&lt;code>&amp;lt;RowDefinition/&amp;gt;&lt;/code>就是有几行，列同理)&lt;br>
在一个&lt;code>&amp;lt;RowDefinition/&amp;gt;&lt;/code>里加入&lt;code>Height=&amp;quot;auto&amp;quot;&lt;/code>表示第一行的高度随内容改变&lt;br>
(就是跟着第一行的控件高度走)&lt;/p>
&lt;p>然后正式往Grid网格里面塞控件，先第一行&lt;br>
首先是再塞了个&lt;code>&amp;lt;Grid&amp;gt;&lt;/code>，然后在里面塞了个&lt;code>&amp;lt;TextBlock&amp;gt;&lt;/code>&lt;br>
其中，&lt;code>Grid.Row&lt;/code>可以指定控件所在的网格行号，列同理&lt;br>
并定义了一系列的属性参数&lt;br>
(&lt;code>Name&lt;/code>属性就是给&lt;code>.cs&lt;/code>调用的对象名，&lt;code>HorizontalAlignment&lt;/code>是水平对正方式，设置为右对齐)&lt;br>
(不是很懂我当时写的逻辑，其实不用多写个&lt;code>&amp;lt;Grid&amp;gt;&lt;/code>，直接塞&lt;code>&amp;lt;TextBlock&amp;gt;&lt;/code>就好)&lt;/p>
&lt;p>第二行，塞了个&lt;code>&amp;lt;Grid&amp;gt;&lt;/code>，并定义出5*4的网格&lt;br>
下面就是一大堆的按键定义，相对比较无趣&lt;br>
值得说道的是&lt;code>Click&lt;/code>属性，这个会指向对应&lt;code>.cs&lt;/code>的一个具体的方法名，实现前后端的融合&lt;br>
(具体看后端实现就可以了)&lt;br>
还有按钮&lt;code>0&lt;/code>多了个&lt;code>Grid.ColumnSpan=&amp;quot;2&amp;quot;&lt;/code>，这个就是让这个按钮可以跨两列显示&lt;br>
由于有之前的&lt;code>&amp;lt;Style&amp;gt;&lt;/code>的定义，所有的按钮都自带字体大小30单位，间距5单位的属性&lt;/p>
&lt;p>这样，我们成功整出了一个简单的计算器界面&lt;br>
长这样的&lt;br>
&lt;img src="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001-%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8/picture/2.png"
width="392"
height="400"
srcset="https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001-%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8/picture/2_hu1622169172083775048.png 480w, https://mlacookie.github.io/article/categories/wpf/wpf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001-%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8/picture/2_hu2022865190909755559.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="98"
data-flex-basis="235px"
>&lt;/p>
&lt;h2 id="0x03-与c后端的结合">&amp;lt;0x03&amp;gt; 与C#后端的结合
&lt;/h2>&lt;p>(@ 23-08-14)&lt;br>
实际上这样并不是搞后端，这些都是再定义前端的行为&lt;br>
具体搞后端可以看我之后写的讲&lt;code>MVVM&lt;/code>设计模型的博客&lt;br>
但如果项目很小的话这样搞也没问题的&lt;/p>
&lt;p>与C#后端的结合可以说非常简单，就是调用和更改控件对象的成员值就可以&lt;br>
还记得我们已经在&lt;code>.xaml&lt;/code>中为一些控件添加了&lt;code>Name&lt;/code>属性吗&lt;br>
这些&lt;code>Name&lt;/code>属性是实现前后端融合的关键&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//等于号按键点击事件的实现逻辑&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Equal_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag &amp;amp;&amp;amp; ans != &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Calculate();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = ans.ToString();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> calculate = &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>别的都不重要，还记得我们有一个&lt;code>&amp;lt;TextBlock&amp;gt;&lt;/code>的&lt;code>Name&lt;/code>属性设置为&lt;code>Answer&lt;/code>吗&lt;br>
通过&lt;code>Answer.Text&lt;/code>可以直接访问并修改&lt;code>&amp;lt;TextBlock&amp;gt;&lt;/code>的内容，非常方便&lt;br>
(&lt;code>Answer.Text&lt;/code>就是&lt;code>String&lt;/code>类型)&lt;br>
其他的控件也同理&lt;/p>
&lt;p>接下来要处理下按钮的点击事件了&lt;br>
这个也非常简单，我们之前已经设置了每个按钮的&lt;code>Click&lt;/code>属性&lt;br>
接下来就是在对应的&lt;code>.cs&lt;/code>中实现逻辑就好&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//大概的结构&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> WPFTest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">partial&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MainWindow&lt;/span> : Window
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_MinusSign_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//加负号按钮的点击事件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Clear_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//清屏键的点击事件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Backspace_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//退格键的点击事件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num9_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num8_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num7_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num6_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num5_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num4_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num3_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num2_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num1_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num0_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//各个数字键的点击事件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Dot_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//小数点按键的点击事件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Div_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Mul_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Sub_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Add_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//+-*/键的点击事件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Equal_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//等于号的点击事件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>每个按钮的点击事件都相当于在&lt;code>C#&lt;/code>中的一个方法&lt;br>
点击一次就触发一次&lt;/p>
&lt;h2 id="附录">附录
&lt;/h2>&lt;p>完整的&lt;code>MainWindow.xaml&lt;/code>已经贴在上文了，这里就不再放了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//MainWindow.xaml.cs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Collections.Generic;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Linq;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Text;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Threading.Tasks;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Windows;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Windows.Controls;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Windows.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Windows.Documents;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Windows.Input;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Windows.Media;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Windows.Media.Imaging;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Windows.Navigation;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Windows.Shapes;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> WPFTest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">partial&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MainWindow&lt;/span> : Window
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">bool&lt;/span> flag = &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int?&lt;/span> calculate = &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double?&lt;/span> ans = &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> MainWindow()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InitializeComponent();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Calculate()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> (calculate)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ans += Double.Parse(Answer.Text);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ans -= Double.Parse(Answer.Text);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ans *= Double.Parse(Answer.Text);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ans /= Double.Parse(Answer.Text);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_MinusSign_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (Answer.Text[&lt;span style="color:#ae81ff">0&lt;/span>]==&lt;span style="color:#e6db74">&amp;#39;-&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = Answer.Text.Substring(&lt;span style="color:#ae81ff">1&lt;/span>, Answer.Text.Length - &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = &lt;span style="color:#e6db74">&amp;#34;-&amp;#34;&lt;/span> + Answer.Text;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Clear_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> calculate = &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ans = &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = &lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Backspace_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = Answer.Text.Substring(&lt;span style="color:#ae81ff">0&lt;/span>, Answer.Text.Length - &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (Answer.Text.Length == &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = &lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num9_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text += &lt;span style="color:#e6db74">&amp;#34;9&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = &lt;span style="color:#e6db74">&amp;#34;9&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num8_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text += &lt;span style="color:#e6db74">&amp;#34;8&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = &lt;span style="color:#e6db74">&amp;#34;8&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num7_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text += &lt;span style="color:#e6db74">&amp;#34;7&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = &lt;span style="color:#e6db74">&amp;#34;7&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num6_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text += &lt;span style="color:#e6db74">&amp;#34;6&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = &lt;span style="color:#e6db74">&amp;#34;6&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num5_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text += &lt;span style="color:#e6db74">&amp;#34;5&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = &lt;span style="color:#e6db74">&amp;#34;5&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num4_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text += &lt;span style="color:#e6db74">&amp;#34;4&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = &lt;span style="color:#e6db74">&amp;#34;4&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num3_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text += &lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = &lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num2_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text += &lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = &lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num1_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text += &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Num0_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text += &lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = &lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Dot_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text += &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Div_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (ans == &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ans = Double.Parse(Answer.Text);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> calculate = &lt;span style="color:#ae81ff">4&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Calculate();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = ans.ToString();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> calculate = &lt;span style="color:#ae81ff">4&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Mul_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (ans == &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ans = Double.Parse(Answer.Text);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> calculate = &lt;span style="color:#ae81ff">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Calculate();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = ans.ToString();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> calculate = &lt;span style="color:#ae81ff">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Sub_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (ans == &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ans = Double.Parse(Answer.Text);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> calculate = &lt;span style="color:#ae81ff">2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Calculate();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = ans.ToString();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> calculate = &lt;span style="color:#ae81ff">2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Add_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (ans == &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ans = Double.Parse(Answer.Text);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> calculate = &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Calculate();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = ans.ToString();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> calculate = &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Button_Equal_Click(&lt;span style="color:#66d9ef">object&lt;/span> sender, RoutedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (flag &amp;amp;&amp;amp; ans != &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Calculate();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Answer.Text = ans.ToString();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> calculate = &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>逻辑就是随性写的，不保证完全没Bug，应该是没严重Bug的&lt;br>
(所以也没写高精度的运算处理)&lt;br>
(写这篇博客比我写代码的时间都长😂)&lt;/p></description></item></channel></rss>