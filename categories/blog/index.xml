<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on MLAcookie</title><link>https://mlacookie.github.io/categories/blog/</link><description>Recent content in Blog on MLAcookie</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 20 Jul 2024 15:02:34 +0800</lastBuildDate><atom:link href="https://mlacookie.github.io/categories/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>从Hexo到Hugo 记录博客框架切换</title><link>https://mlacookie.github.io/article/categories/blog/%E4%BB%8Ehexo%E5%88%B0hugo-%E8%AE%B0%E5%BD%95%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6%E5%88%87%E6%8D%A2/</link><pubDate>Sat, 20 Jul 2024 15:02:34 +0800</pubDate><guid>https://mlacookie.github.io/article/categories/blog/%E4%BB%8Ehexo%E5%88%B0hugo-%E8%AE%B0%E5%BD%95%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6%E5%88%87%E6%8D%A2/</guid><description>&lt;p>嘶，总算是学校的事情忙完了，终于有点时间写写博客了&lt;br>
这个学期感觉一直都在和时间赛跑，没啥时间写博客，自己的项目也基本都断了&lt;br>
当然这些都是另外的话题了&lt;/p>
&lt;p>如果之前有看过我博客的人，应该会发现现在网页大变样了&lt;br>
现在博客的框架从&lt;code>Hexo&lt;/code>换到了&lt;code>Hugo&lt;/code>&lt;br>
中间切换花了我很多时间，里面也有很多能说道说道的&lt;br>
需要注意的是，我的部署方案跟官方的不一样，所以部分配置会和官方文档有所出入&lt;/p>
&lt;h2 id="0x00-为什么要换框架">&amp;lt;0x00&amp;gt; 为什么要换框架
&lt;/h2>&lt;p>简单来说，也算是我闲着没事干&lt;br>
当然，之前&lt;code>Hexo&lt;/code>的流程不是很舒服，写博客的话图片很不好引用&lt;br>
然后的话主题也不是很好看（我没时间去改主题）&lt;/p>
&lt;p>然后正好想尝试下新东西，然后就看到了&lt;code>Hugo&lt;/code>，于是就试了试&lt;br>
尝试之后发现这个框架使用体验确实舒适很多，于是就打算换框架了&lt;/p>
&lt;p>换了框架后，好处主要有以下几点：&lt;/p>
&lt;ul>
&lt;li>文章的图片资源可以更好的管理&lt;/li>
&lt;li>Obsidian更好的融合&lt;/li>
&lt;li>舒适的预览体验&lt;/li>
&lt;/ul>
&lt;h2 id="0x01-安装hugo与新建站点">&amp;lt;0x01&amp;gt; 安装Hugo与新建站点
&lt;/h2>&lt;h3 id="安装hugo">安装Hugo
&lt;/h3>&lt;p>以&lt;code>windows&lt;/code>为例，其他系统只能自己看资料了
安装&lt;code>Hugo&lt;/code>是很简单的&lt;/p>
&lt;p>如果有安装&lt;code>scoop&lt;/code>的话，可以直接敲命令安装&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>scoop install hugo-extended
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里安装的是带扩展的版本，因为我使用的主题需要这个&lt;/p>
&lt;p>如果有安装&lt;code>winget&lt;/code>，也可以直接敲命令安装&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>winget install Hugo.Hugo.Extended
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果上面两个包管理器都没安装，那么需要从&lt;a class="link" href="https://github.com/gohugoio/hugo/releases" target="_blank" rel="noopener"
>Release&lt;/a>中下载预构建的版本&lt;br>
找到带&lt;code>windows&lt;/code>的压缩包下载，里面会有一个&lt;code>hugo.exe&lt;/code>&lt;br>
然后丢到什么路径，添加到&lt;code>windows&lt;/code>环境变量里面，这样就可以在命令行中调用了&lt;/p>
&lt;h3 id="新建hugo站点">新建Hugo站点
&lt;/h3>&lt;p>完成安装后，尝试新建站点来测试是否安装成功&lt;/p>
&lt;p>在希望存放站点内容的位置打开终端&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>hugo new site TestBlog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样会在这个位置创建叫&lt;code>TestBlog&lt;/code>的文件夹，里面会包含&lt;code>hugo&lt;/code>站点的结构&lt;br>
以上就完成了Hugo站点的搭建&lt;/p>
&lt;h2 id="0x02-配置stack主题">&amp;lt;0x02&amp;gt; 配置Stack主题
&lt;/h2>&lt;p>这里使用的主题是&lt;a class="link" href="https://github.com/CaiJimmy/hugo-theme-stack" target="_blank" rel="noopener"
>Stack&lt;/a>，简洁好看&lt;/p>
&lt;h3 id="路径约定">路径约定
&lt;/h3>&lt;p>&lt;code>./&lt;/code>表示存放所有Hugo站点的路径&lt;br>
所以&lt;code>./TestBlog&lt;/code>就是存放TestBlog站点的路径&lt;br>
本文后面所有的路径都将按此表示&lt;/p>
&lt;h3 id="安装stack主题">安装Stack主题
&lt;/h3>&lt;p>&lt;code>./TestBlog/themes&lt;/code>是存放所有主题的路径&lt;br>
在此打开终端&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git clone https://github.com/CaiJimmy/hugo-theme-stack.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>克隆主题仓库&lt;/p>
&lt;p>然后回到&lt;code>./TestBlog&lt;/code>，里面有个&lt;code>hugo.toml&lt;/code>&lt;br>
将&lt;code>theme&lt;/code>的值修改为&lt;code>'hugo-theme-stack'&lt;/code>&lt;/p>
&lt;h3 id="配置头像">配置头像
&lt;/h3>&lt;p>进入&lt;code>./TestBlog/themes/hugo-theme-stack&lt;/code>&lt;br>
这里是&lt;code>Stack&lt;/code>主题的文件&lt;/p>
&lt;p>我们需要修改的头像在&lt;code>./TestBlog/themes/hugo-theme-stack/assets/img&lt;/code>中&lt;br>
那个&lt;code>avatar.png&lt;/code>便是我们我修改的图像&lt;br>
找自己的头像拖进去然后改名就可以了&lt;/p>
&lt;h3 id="配置网站图标">配置网站图标
&lt;/h3>&lt;p>配置网站图标稍微麻烦点&lt;br>
首先进入&lt;code>./TestBlog/themes/hugo-theme-stack&lt;/code>&lt;br>
创建叫&lt;code>static&lt;/code>的文件夹，里面放入网站图标，这里取名&lt;code>favicon.webp&lt;/code>&lt;br>
然后回到&lt;code>./TestBlog/themes/hugo-theme-stack&lt;/code>，打开文件&lt;code>config.yaml&lt;/code>&lt;br>
找到&lt;code>favicon&lt;/code>，将值改为&lt;code>favicon.webp&lt;/code>，也就是网站图标的文件名&lt;/p>
&lt;h3 id="配置社交媒体菜单">配置社交媒体菜单
&lt;/h3>&lt;p>（指的是这个东西）&lt;br>
&lt;img src="https://mlacookie.github.io/article/categories/blog/%E4%BB%8Ehexo%E5%88%B0hugo-%E8%AE%B0%E5%BD%95%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6%E5%88%87%E6%8D%A2/picture/2.png"
width="199"
height="126"
srcset="https://mlacookie.github.io/article/categories/blog/%E4%BB%8Ehexo%E5%88%B0hugo-%E8%AE%B0%E5%BD%95%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6%E5%88%87%E6%8D%A2/picture/2_hu72a80a5b65283b8b81320ae0ac54a439_4977_480x0_resize_box_3.png 480w, https://mlacookie.github.io/article/categories/blog/%E4%BB%8Ehexo%E5%88%B0hugo-%E8%AE%B0%E5%BD%95%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6%E5%88%87%E6%8D%A2/picture/2_hu72a80a5b65283b8b81320ae0ac54a439_4977_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="157"
data-flex-basis="379px"
>&lt;br>
在&lt;code>./TestBlog/themes/hugo-theme-stack&lt;/code>，打开文件&lt;code>config.yaml&lt;/code>&lt;br>
在文件最后添加这些东西&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">menu&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">main&lt;/span>: []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">social&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">identifier&lt;/span>: &lt;span style="color:#ae81ff">github&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">起个名吧&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">url&lt;/span>: &lt;span style="color:#ae81ff">GitHub链接&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">params&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">icon&lt;/span>: &lt;span style="color:#ae81ff">brand-github&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">identifier&lt;/span>: &lt;span style="color:#ae81ff">bilibili&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">起个名吧&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">url&lt;/span>: &lt;span style="color:#ae81ff">bilibili链接&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">params&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">icon&lt;/span>: &lt;span style="color:#ae81ff">brand-bilibili&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>但仅仅这样是不行的，如果构建网页会说没有&lt;code>brand-bilibili.svg&lt;/code>&lt;br>
所以我们需要添加这个svg&lt;br>
进入&lt;code>./TestBlog/themes/hugo-theme-stack/assets/icons&lt;/code>，里面是所有的图标文件&lt;br>
新建一个文件，命名为&lt;code>brand-bilibili.svg&lt;/code>，添加以下内容&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">svg&lt;/span> &lt;span style="color:#a6e22e">xmlns&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2000/svg&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;24&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;24&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">viewBox&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0 0 24 24&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">fill&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;none&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">stroke&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;currentcolor&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">stroke-width&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">stroke-linecap&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;round&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">stroke-linejoin&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;round&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;icon icon-tabler icons-tabler-outline icon-tabler-brand-bilibili&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">path&lt;/span> &lt;span style="color:#a6e22e">stroke&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;none&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">d&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;M0 0h24v24H0z&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">fill&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;none&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">path&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">path&lt;/span> &lt;span style="color:#a6e22e">d&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;M3 10a4 4 0 014-4h10a4 4 0 014 4v6a4 4 0 01-4 4H7a4 4 0 01-4-4v-6z&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">path&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">path&lt;/span> &lt;span style="color:#a6e22e">d&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;M8 3l2 3&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">path&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">path&lt;/span> &lt;span style="color:#a6e22e">d&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;M16 3l-2 3&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">path&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">path&lt;/span> &lt;span style="color:#a6e22e">d&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;M9 13v-2&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">path&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">path&lt;/span> &lt;span style="color:#a6e22e">d&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;M15 11v2&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">path&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">svg&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>（从别人博客薅的）&lt;br>
保存即可&lt;/p>
&lt;p>如果要添加其他网站图标也是这样&lt;/p>
&lt;h2 id="0x03-文章路径与侧栏">&amp;lt;0x03&amp;gt; 文章路径与侧栏
&lt;/h2>&lt;p>Hugo的所有文章都是放在&lt;code>./TestBlog/content&lt;/code>里面&lt;/p>
&lt;p>Hugo支持&lt;code>页面包&lt;/code>来对文章资源进行管理&lt;br>
页面包就是按路径对文章进行打包，一个文章只能访问自己页面包内的内容&lt;br>
这样就将每个文章独立开来，不像之前Hexo所有图片都在一个文件夹中&lt;br>
（或许Hexo也有办法实现，但我不知道）&lt;/p>
&lt;h3 id="修改默认文章目录">修改默认文章目录
&lt;/h3>&lt;p>Stack主题默认指定&lt;code>./TestBlog/content/post&lt;/code>为文章目录&lt;br>
这里我改成了&lt;code>./TestBlog/content/article&lt;/code>&lt;/p>
&lt;p>在&lt;code>./TestBlog/themes/hugo-theme-stack&lt;/code>，打开文件&lt;code>config.yaml&lt;/code>&lt;br>
找到&lt;code>mainSections&lt;/code>将值改为&lt;code>article&lt;/code>即可&lt;/p>
&lt;h3 id="侧栏部分">侧栏部分
&lt;/h3>&lt;p>这里的配置建议参考Stack主题给的&lt;code>exampleSite&lt;/code>配置&lt;br>
直接按page里面的结构配置即可&lt;/p>
&lt;h3 id="文章路径参考">文章路径参考
&lt;/h3>&lt;p>我这的文章路径是这样的&lt;/p>
&lt;pre tabindex="0">&lt;code>content
├── article
| ├── posts
| | ├── 随便起的文章名字
| | | ├── picture
| | | | └── 1.png
| | | └── index.md
| | ├── ...
| | └── ...
| └── categories
| ├── Blog
| | ├── 随便起的文章名字
| | | ├── picture
| | | | └── 1.png
| | | └── index.md
| | ├── ...
| | └── ...
| ├── ...
| └── ...
└── page
├── about
| └── index.md
├── archives
| └── index.md
├── links
| └── index.md
└── search
└── index.md
&lt;/code>&lt;/pre>&lt;h2 id="0x04-obsidian配置">&amp;lt;0x04&amp;gt; obsidian配置
&lt;/h2>&lt;p>用obsidian在&lt;code>./TestBlog/content&lt;/code>创建仓库&lt;br>
obsidian里面需要配置的东西不多，主要是把链接设置为相对文件的路径&lt;br>
&lt;img src="https://mlacookie.github.io/article/categories/blog/%E4%BB%8Ehexo%E5%88%B0hugo-%E8%AE%B0%E5%BD%95%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6%E5%88%87%E6%8D%A2/picture/1.png"
width="753"
height="285"
srcset="https://mlacookie.github.io/article/categories/blog/%E4%BB%8Ehexo%E5%88%B0hugo-%E8%AE%B0%E5%BD%95%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6%E5%88%87%E6%8D%A2/picture/1_hu260104af4c196c1fdd41955a3b24f56d_53879_480x0_resize_box_3.png 480w, https://mlacookie.github.io/article/categories/blog/%E4%BB%8Ehexo%E5%88%B0hugo-%E8%AE%B0%E5%BD%95%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6%E5%88%87%E6%8D%A2/picture/1_hu260104af4c196c1fdd41955a3b24f56d_53879_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="264"
data-flex-basis="634px"
>&lt;br>
这样配置就可以了&lt;/p>
&lt;p>由于使用页面包进行管理，所以所有的文章文件名都是&lt;code>index.md&lt;/code>&lt;br>
这个会导致obsidian节点视图之类的功能显示的都是&lt;code>index&lt;/code>，我目前没有很好的办法&lt;/p>
&lt;h2 id="0x05-部署到github-page上">&amp;lt;0x05&amp;gt; 部署到Github Page上
&lt;/h2>&lt;p>虽然官方文档有讲，但他们采用的是将整个站点push到github上&lt;br>
然后采用&lt;code>Github Action&lt;/code>来在上面构建网页&lt;br>
这样的话如果Action脚本有误可能导致github page行为和本地测试不一样&lt;/p>
&lt;p>我打算本地构建，然后将构建好的网页push到github上面，这样逻辑跟Hexo那套差不多&lt;br>
但Hugo没有这样的自动部署配置，所以要自己来&lt;br>
大致流程是在&lt;code>./TestBlog/public&lt;/code>中初始化git仓库&lt;br>
添加远程git仓库&lt;br>
拉取后提交所有更改&lt;br>
如果需要切换分支的话再切换分支&lt;br>
之后只要构建后提交更改并上传即可&lt;/p>
&lt;p>具体命令参考下面的自动化脚本&lt;/p>
&lt;h2 id="0x06-通过powershell实现自动化">&amp;lt;0x06&amp;gt; 通过PowerShell实现自动化
&lt;/h2>&lt;p>因为是在windows平台，所以这里采用PowerShell来实现一些自动化&lt;/p>
&lt;h3 id="统一变量配置">统一变量配置
&lt;/h3>&lt;p>因为会有好几个脚本，所以需要一个统一的变量配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># configs.ps1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 获取脚本文件夹路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$global:ShellScriptDir &lt;span style="color:#f92672">=&lt;/span> Get-Location
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 主目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$global:SiteDir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[...]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 内容目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$global:ContentDir &lt;span style="color:#f92672">=&lt;/span> Join-Path -Path $global:SiteDir -ChildPath &lt;span style="color:#e6db74">&amp;#34;content&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 文章目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$global:ArticleDir &lt;span style="color:#f92672">=&lt;/span> Join-Path -Path $global:ContentDir -ChildPath &lt;span style="color:#e6db74">&amp;#34;article&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 一般文章目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$global:PostsDir &lt;span style="color:#f92672">=&lt;/span> Join-Path -Path $global:ArticleDir -ChildPath &lt;span style="color:#e6db74">&amp;#34;posts&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 分类文章目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$global:CategoriesDir &lt;span style="color:#f92672">=&lt;/span> Join-Path -Path $global:ArticleDir -ChildPath &lt;span style="color:#e6db74">&amp;#34;categories&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 基础URL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$global:BaseURL &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[...]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 远程Git仓库链接&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$global:RemoteGitURL &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[...]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 目标分支&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$global:TargetBranch &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[...]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 编辑器路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$global:EditorPath &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[...]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="创建文章">创建文章
&lt;/h3>&lt;p>因为希望每次创建文章都会自动创建对应的页面包，所以也需要一个脚本&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># NewPost.ps1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>param&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>string&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>ValidateNotNullOrEmpty&lt;span style="color:#f92672">()]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $PostName,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>string&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CategoryName,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>bool&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $IsStartServer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 导入配置变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. .&lt;span style="color:#ae81ff">\c&lt;/span>onfigs.ps1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 保存当前的工作路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$localDir &lt;span style="color:#f92672">=&lt;/span> Get-Location
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 切换工作路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Location $global:SiteDir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 普通文章创建&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>$CategoryName -eq &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 新建hexo博客&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $newPost &lt;span style="color:#f92672">=&lt;/span> Join-Path -Path &lt;span style="color:#f92672">(&lt;/span>Join-Path -Path &lt;span style="color:#e6db74">&amp;#34;content\article\posts&amp;#34;&lt;/span> -ChildPath $PostName&lt;span style="color:#f92672">)&lt;/span> -ChildPath &lt;span style="color:#e6db74">&amp;#34;index.md&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hugo new $newPost
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 创建图片文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $newPostPicture &lt;span style="color:#f92672">=&lt;/span> Join-Path -Path &lt;span style="color:#f92672">(&lt;/span>Join-Path -Path $global:PostsDir -ChildPath $PostName&lt;span style="color:#f92672">)&lt;/span> -ChildPath &lt;span style="color:#e6db74">&amp;#34;picture&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mkdir $newPostPicture
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 需要分类的文章&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 新建hexo博客&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $categoryPath &lt;span style="color:#f92672">=&lt;/span> Join-Path -Path &lt;span style="color:#e6db74">&amp;#34;content\article\categories&amp;#34;&lt;/span> -ChildPath $CategoryName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $newPost &lt;span style="color:#f92672">=&lt;/span> Join-Path -Path &lt;span style="color:#f92672">(&lt;/span>Join-Path -Path $categoryPath -ChildPath $PostName&lt;span style="color:#f92672">)&lt;/span> -ChildPath &lt;span style="color:#e6db74">&amp;#34;index.md&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hugo new $newPost
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 创建图片文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $categoryPath &lt;span style="color:#f92672">=&lt;/span> Join-Path -Path $global:CategoriesDir -ChildPath $CategoryName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $newPostPicture &lt;span style="color:#f92672">=&lt;/span> Join-Path -Path &lt;span style="color:#f92672">(&lt;/span>Join-Path -Path $categoryPath -ChildPath $PostName&lt;span style="color:#f92672">)&lt;/span> -ChildPath &lt;span style="color:#e6db74">&amp;#34;picture&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mkdir $newPostPicture
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 启动编辑器&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Start-Process $global:EditorPath&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 是否开启服务器预览&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>$IsStartServer&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hugo server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 返回之前的工作路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Location $localDir
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用示例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 创建一篇普通的文章&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.&lt;span style="color:#ae81ff">\N&lt;/span>ewPost.ps1 -PostName 从Hexo到Hugo-记录博客框架切换
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 创建一篇文章，并分类为Blog&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.&lt;span style="color:#ae81ff">\N&lt;/span>ewPost.ps1 -PostName 从Hexo到Hugo-记录博客框架切换 -CategoryName Blog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行后会创建对应的页面包&lt;/p>
&lt;h3 id="发布">发布
&lt;/h3>&lt;p>这里涉及到两个文件，一个&lt;code>InitGit.ps1&lt;/code>用来初始化git仓库，一个&lt;code>Deploy.ps1&lt;/code>做推送&lt;/p>
&lt;p>InitGit.ps1如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># InitGit.ps1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>param&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>bool&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $IsForcePush &lt;span style="color:#f92672">=&lt;/span> $false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 导入配置变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. .&lt;span style="color:#ae81ff">\c&lt;/span>onfigs.ps1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 保存当前的工作路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$localDir &lt;span style="color:#f92672">=&lt;/span> Get-Location
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 切换工作路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Location &lt;span style="color:#f92672">(&lt;/span>Join-Path -Path $global:SiteDir -ChildPath &lt;span style="color:#e6db74">&amp;#34;public&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 初始化git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git remote add origin $global:RemoteGitURL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git pull
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git add .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit -m &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Init: &amp;#34;&lt;/span> + &lt;span style="color:#f92672">(&lt;/span>Get-Date -Format &lt;span style="color:#e6db74">&amp;#34;yyMMdd-HH:mm&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git branch -u $global:TargetBranch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>$IsForcePush&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git push origin HEAD:$global:TargetBranch --force
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 返回之前的工作路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Location $localDir
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Deploy.ps1如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Deploy.ps1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>param&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>bool&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $IsForcePush &lt;span style="color:#f92672">=&lt;/span> $false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 导入配置变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. .&lt;span style="color:#ae81ff">\c&lt;/span>onfigs.ps1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 保存当前的工作路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$localDir &lt;span style="color:#f92672">=&lt;/span> Get-Location
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 切换工作路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Location $global:SiteDir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 构建网页&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hugo --gc --minify --baseURL $global:BaseURL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 准备推送&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Location &lt;span style="color:#f92672">(&lt;/span>Join-Path -Path $global:SiteDir -ChildPath &lt;span style="color:#e6db74">&amp;#34;public&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>-not &lt;span style="color:#f92672">(&lt;/span>Test-Path &lt;span style="color:#e6db74">&amp;#34;.git&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> . &lt;span style="color:#f92672">(&lt;/span>Join-Path -Path $global:ShellScriptDir -ChildPath &lt;span style="color:#e6db74">&amp;#34;InitGit.ps1&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> -IsForcePush $true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git add .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git commit -m &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Deploy: &amp;#34;&lt;/span> + &lt;span style="color:#f92672">(&lt;/span>Get-Date -Format &lt;span style="color:#e6db74">&amp;#34;yyMMdd-HH:mm&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 是否强制推送&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>$IsForcePush&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git push origin HEAD:$global:TargetBranch --force
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git push origin HEAD:$global:TargetBranch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 返回之前的工作路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Location $localDir
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用示例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>.&lt;span style="color:#ae81ff">\D&lt;/span>eploy.ps1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行即可推送到GitHub Page上&lt;/p>
&lt;h3 id="批量创建页面包路径结构">批量创建页面包路径结构
&lt;/h3>&lt;p>因为之前使用的是hexo，里面都是单独的markdown文件&lt;br>
如果自己手动一个一个移动并创建picture文件夹那就太累了&lt;br>
所以还是要写一个脚本完成自动化&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># TransFromSingleFile.ps1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>param&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>string&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>ValidateNotNullOrEmpty&lt;span style="color:#f92672">()]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $postDir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 排除文件名单&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$excludeList &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;_index&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Get-ChildItem -Path $postDir -File | ForEach-Object &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>$_.BaseName -notin $excludeList&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 创建文件夹并移动&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $destDir &lt;span style="color:#f92672">=&lt;/span> Join-Path -Path $postDir -ChildPath $_.BaseName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> New-Item -ItemType Directory -Force -Path $destDir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Move-Item -Path $_.FullName -Destination &lt;span style="color:#f92672">(&lt;/span>Join-Path -Path $destDir -ChildPath &lt;span style="color:#e6db74">&amp;#34;index&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>$_.Extension&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 创建对应的picture文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $newPostPicture &lt;span style="color:#f92672">=&lt;/span> Join-Path -Path $destDir -ChildPath &lt;span style="color:#e6db74">&amp;#34;picture&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mkdir $newPostPicture
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用示例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>.&lt;span style="color:#ae81ff">\T&lt;/span>ransFromSingleFile.ps1 &lt;span style="color:#f92672">[&lt;/span>某个路径&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行可以为路径内所有文件创建同名文件夹，并将文件移动至对应文件夹后重命名为&lt;code>index.md&lt;/code>&lt;br>
里面也会创建&lt;code>picture&lt;/code>文件夹&lt;/p></description></item><item><title>我的hexo配合obsidian的配置</title><link>https://mlacookie.github.io/article/categories/blog/%E6%88%91%E7%9A%84hexo%E9%85%8D%E5%90%88obsidian%E7%9A%84%E9%85%8D%E7%BD%AE/</link><pubDate>Sun, 03 Mar 2024 13:24:40 +0000</pubDate><guid>https://mlacookie.github.io/article/categories/blog/%E6%88%91%E7%9A%84hexo%E9%85%8D%E5%90%88obsidian%E7%9A%84%E9%85%8D%E7%BD%AE/</guid><description>&lt;p>闲着没事想着优化一下hexo的博客配置
我原来一直都是用&lt;code>vscode&lt;/code>写markdown的，至于体验嘛，能写但不是很舒适
所以我就尝试换成了现在在用的&lt;code>obsidian&lt;/code>，体验就好多了&lt;/p>
&lt;p>然后就按网上的教程，尝试配置更加优雅的流程
然后发现原来用的&lt;code>hexo&lt;/code>框架有点老了，就干脆重装了
没想到啊，重装个&lt;code>hexo&lt;/code>又出了很多问题
所以这篇博客就从&lt;code>hexo&lt;/code>的安装开始讲吧&lt;/p>
&lt;h2 id="0x00-hexo的安装">&amp;lt;0x00&amp;gt; hexo的安装
&lt;/h2>&lt;p>（一般情况下跟着&lt;a class="link" href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener"
>hexo官方教程&lt;/a>没啥问题）
首先是要有&lt;code>Node.js&lt;/code>环境，这个随意，最好是最新的版本
还要安装&lt;code>git&lt;/code>，这个直接网上找安装包安装就好了&lt;/p>
&lt;h3 id="npm换源">npm换源
&lt;/h3>&lt;p>&lt;code>npm&lt;/code>原本的国内连接不畅，所以要换源
一般是换成国内的淘宝源&lt;/p>
&lt;h4 id="一般敲命令方法">一般敲命令方法
&lt;/h4>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>npm config set registry https://registry.npm.taobao.org
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="通过nrm切换">通过nrm切换
&lt;/h4>&lt;p>&lt;code>nrm&lt;/code>是&lt;code>npm&lt;/code>的源管理器，可以在不同的源中切换
如果没有什么特殊上网方式访问原本的源的话还是建议先手动切换源
（&lt;code>nrm&lt;/code>也是靠&lt;code>npm&lt;/code>下载的）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -g参数表示全局安装，这样的话可以在任何目录中使用nrm&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install -g nrm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nrm use taobao
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 查看其它可以用的源&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nrm ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 测试源&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nrm test
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="安装hexo">安装hexo
&lt;/h3>&lt;p>首先是安装hexo环境&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>npm install -g hexo-cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后挑一个空的文件夹，初始化
（这里取名叫HexoBlog了）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>hexo init ./HexoBlog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后原本空的文件夹里面会生成一些文件
安装&lt;code>hexo&lt;/code>依赖&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cd ./HexoBlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样之后，&lt;code>hexo&lt;/code>就搭建好了
但貌似&lt;code>hexo&lt;/code>的依赖文件写的版本可能比较老了，最好还是更新一下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>npm update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="0x01-安装anatolo主题">&amp;lt;0x01&amp;gt; 安装Anatolo主题
&lt;/h2>&lt;p>别的主题就看具体的安装说明了，我这里还是用&lt;a class="link" href="https://github.com/Lhcfl/hexo-theme-anatolo" target="_blank" rel="noopener"
>Anatolo&lt;/a>了&lt;/p>
&lt;p>首先是在&lt;code>HexoBlog&lt;/code>文件夹&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git clone https://gitee.com/Lhcfl/hexo-theme-anatolo.git themes/Anatolo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install hexo-renderer-pug --save
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install hexo-renderer-stylus --save
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后进入&lt;code>HexoBlog/themes/Anatolo&lt;/code>中，复制&lt;code>_config.example.yml&lt;/code>为&lt;code>_config.yml&lt;/code>
这个&lt;code>_config.yml&lt;/code>是&lt;code>Anatolo&lt;/code>的配置文件
这里还需要多做一步，这一步在原本的安装文件中没有说&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>npm install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>需要在Anatolo中再安装一次依赖，如果没有这一步的话运行时会报错找不到模块
我的猜想是我们在安装&lt;code>hexo&lt;/code>依赖时没有全局安装，所以要在这里再安装一次
（或者所有的&lt;code>npm&lt;/code>都&lt;code>-g&lt;/code>全局安装也行，但这样对C盘不友好，尤其是像我并不是专门做Nodejs开发的人）&lt;/p>
&lt;p>然后回到&lt;code>HexoBlog&lt;/code>，修改&lt;code>_config.yml&lt;/code>中的&lt;code>theme: Anatolo&lt;/code>
这样主题也安装好了&lt;/p>
&lt;h2 id="0x02-优化hexo配置">&amp;lt;0x02&amp;gt; 优化Hexo配置
&lt;/h2>&lt;h3 id="部署到github-page上">部署到Github Page上
&lt;/h3>&lt;p>这个网上的教程足够多了，这边不细讲
就是记得安装&lt;code>hexo-deployer-git&lt;/code>插件就好
在&lt;code>HexoBlog&lt;/code>中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>npm install hexo-deployer-git --save
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="更方便的分文件管理">更方便的分文件管理
&lt;/h3>&lt;p>&lt;code>hexo&lt;/code>的默认所有的博客文章都存放在&lt;code>HexoBlog/source/_posts&lt;/code>下面
虽然可以在里面用文件夹归类不同的文章，但需要给这些博客手动写上&lt;code>categories&lt;/code>属性
这就很麻烦了，手写麻烦还容易出错&lt;/p>
&lt;p>可以安装一个插件，&lt;code>hexo-auto-category&lt;/code>
它可以在&lt;code>hexo&lt;/code>生成网页时自动给每个博客打上对应的&lt;code>categories&lt;/code>属性&lt;/p>
&lt;p>在&lt;code>HexoBlog&lt;/code>中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>npm install hexo-auto-category --save
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改&lt;code>_config.yml&lt;/code>，添加下面的语句&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">auto_category&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">enable&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">depth&lt;/span>:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样就安装好并启用了&lt;/p>
&lt;h2 id="0x03-使用obsidian作为编辑器">&amp;lt;0x03&amp;gt; 使用obsidian作为编辑器
&lt;/h2>&lt;p>&lt;code>obsidian&lt;/code>确实香，比起原本的&lt;code>vscode&lt;/code>好多了，毕竟是专门的&lt;code>markdown&lt;/code>编辑器
但要在&lt;code>hexo&lt;/code>中使用&lt;code>obsidian&lt;/code>作为编辑器，还需要做一些小优化&lt;/p>
&lt;p>仓库的话，用obsidian打开&lt;code>HexoBlog/source/_posts&lt;/code>就可以了&lt;/p>
&lt;h3 id="图片问题">图片问题
&lt;/h3>&lt;p>hexo在生成时，图片需要在&lt;code>HexoBlog/source&lt;/code>下面
但由于obsidian打开的目录在&lt;code>HexoBlog/source/_posts&lt;/code>，所以会检索不到图片&lt;/p>
&lt;p>我的解决方案是在&lt;code>HexoBlog/source&lt;/code>下面新建&lt;code>picture&lt;/code>文件夹来专门存图片
然后在&lt;code>HexoBlog/source/_posts&lt;/code>下面添加&lt;code>picture&lt;/code>软连接，让&lt;code>obsidian&lt;/code>可以检索到&lt;/p>
&lt;p>添加软连接的命令在&lt;code>powershell&lt;/code>下和&lt;code>cmd&lt;/code>下面有所不同，但都需要管理员权限&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># powershell&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>New-Item -ItemType SymbolicLink -Path $放的地方 -Name $名字 -Target $连接的目标
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># cmd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mklink /d $软连接存放路径 $连接的目标
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后就是在&lt;code>obsidian&lt;/code>中编辑时，引用图片的格式应是&lt;code>![](/picture/...)&lt;/code>
最好把&lt;code>obsidian&lt;/code>的&lt;code>文件与链接&amp;gt; &amp;gt; 自动添加wiki引用&lt;/code>关了，&lt;code>[[]]&lt;/code>格式的连接hexo本身解析不了
&lt;img src="https://mlacookie.github.io/article/categories/blog/%E6%88%91%E7%9A%84hexo%E9%85%8D%E5%90%88obsidian%E7%9A%84%E9%85%8D%E7%BD%AE/picture/1.png"
width="784"
height="76"
srcset="https://mlacookie.github.io/article/categories/blog/%E6%88%91%E7%9A%84hexo%E9%85%8D%E5%90%88obsidian%E7%9A%84%E9%85%8D%E7%BD%AE/picture/1_huef58a9bd83d99962061fdf703b3f1df2_12417_480x0_resize_box_3.png 480w, https://mlacookie.github.io/article/categories/blog/%E6%88%91%E7%9A%84hexo%E9%85%8D%E5%90%88obsidian%E7%9A%84%E9%85%8D%E7%BD%AE/picture/1_huef58a9bd83d99962061fdf703b3f1df2_12417_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="1031"
data-flex-basis="2475px"
>
（貌似有插件在解决这个问题，但我没试成功过）&lt;/p>
&lt;h2 id="0x04-使用脚本做自动化">&amp;lt;0x04&amp;gt; 使用脚本做自动化
&lt;/h2>&lt;p>&lt;code>hexo&lt;/code>的生成和部署都还是靠cli命令的
所以可以写一些脚本来做一些自动化
这里的脚本都是&lt;code>powershell&lt;/code>脚本&lt;/p>
&lt;h3 id="新建博客文章并编辑">新建博客文章并编辑
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># (@24-03-07) 优化脚本，增加去除URL特殊字符&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">param&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    [&lt;span style="color:#66d9ef">string&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    [ValidateNotNullOrEmpty()]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    $Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> ValidatedName {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#66d9ef">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        [&lt;span style="color:#66d9ef">string&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        [ValidateNotNullOrEmpty()]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        $Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    $SpecialCharacters = [&lt;span style="color:#66d9ef">char[]&lt;/span>]@(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;` &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;`!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">`&amp;#34;&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;`#&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">`$&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;`%&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;`&amp;amp;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">`&amp;#39;&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;(&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;+&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;,&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;-&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;&amp;lt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;=&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;&amp;gt; &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;?&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;@&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;[&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;\&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;^&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;_&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">``&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;{&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;|&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#e6db74">&amp;#34;~&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#75715e"># 先每个替换成-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#66d9ef">foreach&lt;/span> ($Character &lt;span style="color:#66d9ef">in&lt;/span> $SpecialCharacters) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        $Name = $Name.Replace($Character, &lt;span style="color:#e6db74">&amp;#34;-&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#75715e"># 返回时使用正则表达式匹配连续的-，并替换为单个-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#66d9ef">return&lt;/span> $Name &lt;span style="color:#f92672">-Replace&lt;/span> &lt;span style="color:#e6db74">&amp;#39;([-])+&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;-&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 指定Obsidian目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ObsidianPath = &lt;span style="color:#e6db74">&amp;#34;C:\Users\cookie\scoop\apps\obsidian\current\Obsidian.exe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 新建hexo博客&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hexo new $Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 去除URL特殊字符&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$Name=ValidatedName -Name $Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 创建图片文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir ./source/picture/$Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 启动Obsidian&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Start-Process $ObsidianPath -ArgumentList ./source/_posts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># cls&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Clear-Host
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="本地化部署测试">本地化部署测试
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">param&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    [&lt;span style="color:#66d9ef">Int16&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    $Port
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 清理hexo缓存&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hexo clean
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># hexo生成&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hexo g
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 启动本地hexo服务器&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> ($Port &lt;span style="color:#f92672">-eq&lt;/span> $null) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    hexo server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    hexo server -p $Port
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="0x05-安装过程中可能的问题">&amp;lt;0x05&amp;gt; 安装过程中可能的问题
&lt;/h2>&lt;p>&lt;code>hexo&lt;/code>的有些依赖可能已经已放弃维护了
比如说&lt;code>hexo-renderer-sass&lt;/code>，这个非常容易报错
（貌似删了不影响整体运行）
可以替换成&lt;code>hexo-renderer-sass-next&lt;/code>，这个稳定很多&lt;/p>
&lt;h2 id="0x06-这套方案的问题">&amp;lt;0x06&amp;gt; 这套方案的问题
&lt;/h2>&lt;p>不支持Obsidian的wiki链接解析
也没用上Obsidian自带的模板功能
文章之间相互引用也很麻烦，要知道文章的具体URL&lt;/p></description></item><item><title>国内阿里云服务器关闭</title><link>https://mlacookie.github.io/article/categories/blog/%E5%9B%BD%E5%86%85%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%B3%E9%97%AD/</link><pubDate>Sun, 19 Nov 2023 22:53:27 +0000</pubDate><guid>https://mlacookie.github.io/article/categories/blog/%E5%9B%BD%E5%86%85%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%B3%E9%97%AD/</guid><description>&lt;p>不打算续费阿里云的服务器了&lt;br>
(虽然本来就是嫖的7个月)&lt;br>
为什么呢，主要就是因为成本算下来感觉不合适&lt;br>
不是说贵，而是事情太多，没时间维护&lt;br>
应该也发现了，我已经接近1个月没写博客了&lt;br>
这段时间事情实在是多，但都是好的事情多&lt;br>
我终于算是找到能为之奋斗的方向了&lt;br>
于是仔细想想，服务器这块估计是没时间维护了&lt;/p>
&lt;p>虽然国内的服务器关闭了，但Github Page的还是在的&lt;br>
(反正免费，就挂着了)&lt;br>
至于这么干之后受影响最大的是什么&lt;br>
那应该就是我的那些Git仓库的国内镜像了&lt;br>
但问题不大，Github上也都是还在的&lt;/p></description></item><item><title>庆祝下备案全通过了</title><link>https://mlacookie.github.io/article/categories/blog/%E5%BA%86%E7%A5%9D%E4%B8%8B%E5%A4%87%E6%A1%88%E5%85%A8%E9%80%9A%E8%BF%87%E4%BA%86/</link><pubDate>Thu, 18 May 2023 14:35:25 +0000</pubDate><guid>https://mlacookie.github.io/article/categories/blog/%E5%BA%86%E7%A5%9D%E4%B8%8B%E5%A4%87%E6%A1%88%E5%85%A8%E9%80%9A%E8%BF%87%E4%BA%86/</guid><description>&lt;h2 id="终于通过所有备案了">终于通过所有备案了
&lt;/h2>&lt;p>所以之后会慢慢在这个小站上分享我的见闻&lt;br>
虽然不知道有没有人看，但还是很感谢正在看这个页面的你&lt;/p>
&lt;h3 id="关于备案流程">关于备案流程
&lt;/h3>&lt;p>其实主要就是等&lt;br>
要做&lt;code>ICP备案&lt;/code>和&lt;code>公安备案&lt;/code>&lt;br>
我的服务器和域名都是阿里云的，所以&lt;code>ICP备案&lt;/code>通过阿里云代办。&lt;code>公安备案&lt;/code>自己填填就可以了&lt;/p>
&lt;p>首先是&lt;code>ICP备案&lt;/code>，阿里云的ICP备案说得很详细了&lt;br>
主要的问题就是在拍自己照片的时候要找面白墙&lt;br>
其他的东西仔细填写就好&lt;br>
提交完材料后会有人打电话跟你确认，顺便说一下提交的材料有什么问题&lt;br>
有问题的话都会指出，然后邮箱发给他们就好&lt;br>
然后再是工信部的短信验证，跟着流程就行
接下来就是等了，一般10天左右&lt;br>
一切顺利的话&lt;code>ICP备案&lt;/code>就下来了&lt;/p>
&lt;p>之后就是&lt;code>公安备案&lt;/code>，这个比较容易，就是登入网页然后填填表就行&lt;br>
一般第二天就能备案下来&lt;br>
里面有个&lt;code>业务类型&lt;/code>，如果只是跟我一样搭个博客的话不要勾选&lt;code>交互服务&lt;/code>，然后选&lt;code>www服务&lt;/code>就好&lt;br>
据说选了交互服务要线下确认，所以能少一事就少一事&lt;/p>
&lt;p>最后记得在页面下面挂备案号。&lt;/p></description></item><item><title>给侧边栏加个B站图标</title><link>https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/</link><pubDate>Wed, 26 Apr 2023 21:59:57 +0000</pubDate><guid>https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/</guid><description>&lt;p>搭个博客嘛，肯定要加点个人的一些账号。然后呢，我想加个B站的链接，但是在 Anatolo 的模板里没有，这下只能自己动手了。&lt;/p>
&lt;h2 id="一些约定的符号">一些约定的符号
&lt;/h2>&lt;p>&lt;code>./&lt;/code> 表示 hexo 博客的根目录&lt;/p>
&lt;h2 id="0x00-分析">&amp;lt;0x00&amp;gt; 分析
&lt;/h2>&lt;p>我先是在 &lt;code>./themes/Anatolo/source/images&lt;/code> 里找，发现里面只有网站的 icon 和主要图标，没有那些社交媒体的图标
&lt;img src="https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/1.jpg"
width="87"
height="28"
srcset="https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/1_hu808bf1b7a55ea40dafadbefda6e35af9_9775_480x0_resize_q75_box.jpg 480w, https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/1_hu808bf1b7a55ea40dafadbefda6e35af9_9775_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="演示"
class="gallery-image"
data-flex-grow="310"
data-flex-basis="745px"
>&lt;br>
(比如这样的图标，B站的图标原来是没有的)&lt;br>
然后就又去找 &lt;code>./themes/Anatolo/layout/partial&lt;/code> 下面的各种文件，发现有个叫 &lt;code>sidebar.pug&lt;/code> 和 &lt;code>social_links.pug&lt;/code> 这两个文件。问题来了，&lt;code>.pub&lt;/code> 是啥文件啊(之前真没接触过)。百度了以下，这是个排版引擎的语言。行吧，直接在线学习。&lt;/p>
&lt;p>然后打开了 &lt;code>sidebar.pug&lt;/code> 简单分析下，感觉关系不大。打开 &lt;code>social_links.pug&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-pug" data-lang="pug">// social_links.pug
ul.social-links
if theme.github
li
a(href= theme.github)
i.fa.fa-github
if theme.mail
li
//- a(href= &amp;#34;javascript:alert(\&amp;#34;&amp;#34; + theme.mail +&amp;#34;\&amp;#34;)&amp;#34; )
a(href= &amp;#34;mailto:&amp;#34; + theme.mail )
i.fa.fa-envelope
if theme.QQ
li
a(href= &amp;#34;http://sighttp.qq.com/authd?IDKEY=&amp;#34; + theme.QQ)
i.fa.fa-qq
if theme.zhihu
li
a(href= theme.zhihu)
i.fa.fa-mortar-board
if theme.twitter
li
a(href= theme.twitter)
i.fa.fa-twitter
if theme.instagram
li
a(href= theme.instagram)
i.fa.fa-instagram
if theme.rss
li
a(href= url_for(theme.rss))
i.fa.fa-rss
if theme.weibo
li
a(href= theme.weibo)
i.fa.fa-weibo
if theme.facebook
li
a(href= theme.facebook)
i.fa.fa-facebook
&lt;/code>&lt;/pre>&lt;p>感觉很有关系&lt;/p>
&lt;h2 id="0x01-简单的尝试">&amp;lt;0x01&amp;gt; 简单的尝试
&lt;/h2>&lt;p>于是我就直接很粗暴的在 &lt;code>social_links.pug&lt;/code> 里加上这个&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-pug" data-lang="pug">if theme.bilibili
li
a(href= theme.bilibili)
i.fa.fa-bilibili
&lt;/code>&lt;/pre>&lt;p>还有在 &lt;code>./themes/Anatolo/_config.yml&lt;/code> 里加上这个&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">bilibili&lt;/span>: &lt;span style="color:#ae81ff">https://space.bilibili.com/13629146&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>一编译，一部署，一看，果不其然，直接是空白。
然后看看开发者工具，发现在对应地方的 html 代码里多了这些&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">li&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;_blank&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">rel&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;noopener&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;https://space.bilibili.com/13629146&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">i&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fa fa-bilibili&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">i&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">li&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>也就是说，其实添加是添加进去了，但就是没有对应的图标而已&lt;br>
问题来了，&lt;code>&amp;lt;i class=&amp;quot;fa fa-bilibili&amp;quot;&amp;gt;&lt;/code> 里面的 &lt;code>fa&lt;/code> 指的是什么呢?&lt;/p>
&lt;h2 id="0x02-二度分析">&amp;lt;0x02&amp;gt; 二度分析
&lt;/h2>&lt;p>搜索了一下，&lt;code>fa&lt;/code> 指的是 Font awesome，是有各种常见图标的字体。找的官网，看了看图标列表，果然没有B站&lt;br>
这下不得不自己做字体了(如果直接插入图片会更简单倒是)&lt;/p>
&lt;p>翻了翻 &lt;code>./themes/Anatolo/source/fonts&lt;/code> 果然有 FontAwesome 的字体文件&lt;br>
(有 &lt;code>.otf&lt;/code> &lt;code>.eot&lt;/code> &lt;code>.svg&lt;/code> &lt;code>.ttf&lt;/code> &lt;code>.woff&lt;/code> &lt;code>.woff2&lt;/code>)&lt;/p>
&lt;h2 id="0x03-制作图标">&amp;lt;0x03&amp;gt; 制作图标
&lt;/h2>&lt;p>首先需要一个工具网站，用来做字体。然后还需要一个矢量图编辑器。&lt;br>
网站是 &lt;a class="link" href="https://icomoon.io/" target="_blank" rel="noopener"
>icomoon.io&lt;/a> 直接点击右上角的 &lt;code>IcoMoon App&lt;/code> 即可&lt;br>
矢量图编辑器随意，我这里用的是 &lt;a class="link" href="https://inkscape.org/" target="_blank" rel="noopener"
>inkscape&lt;/a>&lt;/p>
&lt;p>进入 &lt;code>IcoMoon App&lt;/code> 后，点击左上角 &lt;code>Import Icons&lt;/code>，选择 &lt;code>.svg&lt;/code> 文件&lt;br>
左上角选择铅笔，然后随便选一个图标，点击 &lt;code>Download(SVG)&lt;/code> 下载这个图标的 &lt;code>.svg&lt;/code> 文件。&lt;/p>
&lt;p>然后在本地用矢量图编辑器打开，把原来的图清掉，然后再在上面画矢量图就可以了。&lt;/p>
&lt;p>画的时候注意不要用描边，要用填充来构成图形。如果不小心用描边构成了图形，那么也可以选中路径，然后找到这个&lt;br>
&lt;img src="https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/2.jpg"
width="235"
height="581"
srcset="https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/2_hu109913a40237cb6190d14dd6d7cf27a8_89168_480x0_resize_q75_box.jpg 480w, https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/2_hu109913a40237cb6190d14dd6d7cf27a8_89168_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="路径→描边转路径"
class="gallery-image"
data-flex-grow="40"
data-flex-basis="97px"
>&lt;br>
点一下就会自动转换成填充了&lt;br>
画的时候要尽可能把画布填满，如果上下留白很多的话可以适当减小。&lt;br>
画布大小可以在&lt;code>文件→文档属性&lt;/code>里修改&lt;br>
如果贝塞尔曲线画不好的话可以先用有理B样条来画，后者好画一点，但画出来就是比较圆润。
&lt;img src="https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/3.jpg"
width="284"
height="326"
srcset="https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/3_hu66da9bad32194b9ab295e600fdb67e9a_63586_480x0_resize_q75_box.jpg 480w, https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/3_hu66da9bad32194b9ab295e600fdb67e9a_63586_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="第一个是贝塞尔，第三个是B样条"
class="gallery-image"
data-flex-grow="87"
data-flex-basis="209px"
>&lt;br>
用贝塞尔曲线画的画，尽可能让每个节点的手柄要么水平，要么垂直，这样画会相对简单一点&lt;br>
如果图标有一定的对称性，那么节点要对称，而且手柄的长度也要对称&lt;br>
&lt;img src="https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/4.jpg"
width="1928"
height="1050"
srcset="https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/4_hu747705ed60103c1e25375c7c70351264_420322_480x0_resize_q75_box.jpg 480w, https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/4_hu747705ed60103c1e25375c7c70351264_420322_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="我的成果"
class="gallery-image"
data-flex-grow="183"
data-flex-basis="440px"
>&lt;br>
我的成果供大家参考。&lt;/p>
&lt;p>然后，保存文件，回到之前的网页。导入我们制作的 &lt;code>.svg&lt;/code> 文件。&lt;br>
&lt;img src="https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/5.jpg"
width="1920"
height="1050"
srcset="https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/5_hu717767c703288dc490ca154b3905764b_163917_480x0_resize_q75_box.jpg 480w, https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/5_hu717767c703288dc490ca154b3905764b_163917_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="Import to set"
class="gallery-image"
data-flex-grow="182"
data-flex-basis="438px"
>&lt;br>
然后选择右上角移动工具&lt;br>
&lt;img src="https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/6.jpg"
width="160"
height="32"
srcset="https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/6_hu62cc3facce26d64b9ae8fa29969dfb21_12622_480x0_resize_q75_box.jpg 480w, https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/6_hu62cc3facce26d64b9ae8fa29969dfb21_12622_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="移动工具"
class="gallery-image"
data-flex-grow="500"
data-flex-basis="1200px"
>&lt;br>
把我们的图标移到列表的最后一个。&lt;br>
最后选择 &lt;code>Generate Font&lt;/code> 生成字体文件。下载前找到我们新制作的图标，可以先检查下有没有什么问题。&lt;/p>
&lt;h2 id="0x04-替换原有字体">&amp;lt;0x04&amp;gt; 替换原有字体
&lt;/h2>&lt;p>下载后解压缩，里面有个 &lt;code>demo.html&lt;/code> 可以用来查看字体和字体编号(字体编号很重要)，还有 &lt;code>fonts&lt;/code> 文件夹，里面就是我们生成的字体了。&lt;/p>
&lt;p>打开 &lt;code>demo.html&lt;/code>，找到我们的图标，记下图标的编号(这个编号在字体生成里也能改)，比如我的字体编号是 &lt;code>f2e1&lt;/code>。&lt;/p>
&lt;p>把 &lt;code>fonts&lt;/code> 文件下的文件复制到 &lt;code>./themes/Anatolo/source/fonts&lt;/code>&lt;br>
在 &lt;code>./themes/Anatolo/source/css&lt;/code> 里找到 &lt;code>font-awesome.css&lt;/code> 和 &lt;code>font-awesome.min.css&lt;/code> (建议每个复制一个作备份)，打开。&lt;br>
在 &lt;code>font-awesome.css&lt;/code> 修改&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/*原来的*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@&lt;span style="color:#66d9ef">font-face&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">font-family&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;FontAwesome&amp;#39;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#f92672">url&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;../fonts/fontawesome-webfont.eot?v=4.7.0&amp;#39;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#f92672">url&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;../fonts/fontawesome-webfont.eot?#iefix&amp;amp;v=4.7.0&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">format&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;embedded-opentype&amp;#39;&lt;/span>&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#f92672">url&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;../fonts/fontawesome-webfont.woff2?v=4.7.0&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">format&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;woff2&amp;#39;&lt;/span>&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#f92672">url&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;../fonts/fontawesome-webfont.woff?v=4.7.0&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">format&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;woff&amp;#39;&lt;/span>&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#f92672">url&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;../fonts/fontawesome-webfont.ttf?v=4.7.0&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">format&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;truetype&amp;#39;&lt;/span>&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#f92672">url&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;../fonts/fontawesome-webfont.svg?v=4.7.0#fontawesomeregular&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">format&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;svg&amp;#39;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">font-weight&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#f92672">normal&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">font-style&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#f92672">normal&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/*修改为*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@&lt;span style="color:#66d9ef">font-face&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">font-family&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;FontAwesome&amp;#39;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#f92672">url&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;../fonts/fontawesome-webfont.eot&amp;#39;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#f92672">url&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;../fonts/fontawesome-webfont.eot&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">format&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;embedded-opentype&amp;#39;&lt;/span>&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#f92672">url&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;../fonts/fontawesome-webfont.woff&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">format&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;woff&amp;#39;&lt;/span>&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#f92672">url&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;../fonts/fontawesome-webfont.ttf&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">format&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;truetype&amp;#39;&lt;/span>&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#f92672">url&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;../fonts/fontawesome-webfont.svg&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">format&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;svg&amp;#39;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">font-weight&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#f92672">normal&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">font-style&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#f92672">normal&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我这里的字体名还是 &lt;code>fontawesome-webfont&lt;/code> 这里名字按自己的来&lt;/p>
&lt;p>然后加上这些&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>.&lt;span style="color:#a6e22e">fa-bilibili-alt&lt;/span>:&lt;span style="color:#a6e22e">before&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">content&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;\f2e1&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>反正有很多长差不多的，加在那里面就可以。&lt;br>
&lt;code>\f2e1&lt;/code> 这里要看你的编号填，&lt;code>.fa-bilibili-alt&lt;/code> 这个算是给图标起个名字，随意就好。&lt;br>
&lt;code>font-awesome.min.css&lt;/code> 就是 &lt;code>font-awesome.css&lt;/code> 去掉所有缩进的版本，也要加上并修改些东西，在这里就不讲了。&lt;/p>
&lt;h2 id="0x05-部署试试">&amp;lt;0x05&amp;gt; 部署试试
&lt;/h2>&lt;p>(记得加上&amp;lt;0x02&amp;gt;的多出来的代码)&lt;br>
编译，部署。访问下网页看看有没有新图标出现。如果没有，清除或禁用网页缓存后再试试。理论上自己加入的图标就会出现。&lt;br>
&lt;img src="https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/7.jpg"
width="232"
height="100"
srcset="https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/7_hu897f00d9463e4fce6fb5e0ed5669221b_2837_480x0_resize_q75_box.jpg 480w, https://mlacookie.github.io/article/categories/blog/%E7%BB%99%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%AAb%E7%AB%99%E5%9B%BE%E6%A0%87/picture/7_hu897f00d9463e4fce6fb5e0ed5669221b_2837_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="成功示例"
class="gallery-image"
data-flex-grow="232"
data-flex-basis="556px"
>&lt;br>
就像这样。&lt;/p>
&lt;h2 id="搞定下班">搞定，下班
&lt;/h2></description></item><item><title>如何一个hexo博客同时部署多git</title><link>https://mlacookie.github.io/article/categories/blog/%E5%A6%82%E4%BD%95%E4%B8%80%E4%B8%AAhexo%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%A4%9Agit/</link><pubDate>Sun, 23 Apr 2023 16:35:19 +0000</pubDate><guid>https://mlacookie.github.io/article/categories/blog/%E5%A6%82%E4%BD%95%E4%B8%80%E4%B8%AAhexo%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%A4%9Agit/</guid><description>&lt;h2 id="0x01-如何实现">&amp;lt;0x01&amp;gt; 如何实现
&lt;/h2>&lt;p>思路是本地多写几份 config 文件&lt;br>
在部署时切换就可以&lt;/p>
&lt;h2 id="0x02-开搞">&amp;lt;0x02&amp;gt; 开搞
&lt;/h2>&lt;p>首先先新建几个 config 文件&lt;br>
建议直接复制原来的&lt;code>_config.yml&lt;/code>&lt;br>
复制的文件名字随意
我们只需要修改最下面的&lt;code>deploy&lt;/code>部分就好&lt;/p>
&lt;p>比如我在 hexo 目录建了两个文件&lt;br>
分别是&lt;code>_GitPageConfig.yml&lt;/code>与&lt;code>_ServerConfig.yml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># _GitPageConfig.yml的部分&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">deploy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">repo&lt;/span>: &lt;span style="color:#ae81ff">git@github.com:{github用户名}/{github用户名}.github.io.git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">branch&lt;/span>: &lt;span style="color:#ae81ff">gh-pages&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># _ServerConfig.yml的部分&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">deploy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">repo&lt;/span>: &lt;span style="color:#ae81ff">git@{服务器ip}:{gitea用户名}/{gitea仓库名}.git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">branch&lt;/span>: &lt;span style="color:#ae81ff">master&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后新建一个脚本文件&lt;br>
这里用 windows 配置，所以新建了个 powershell 脚本&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ps1" data-lang="ps1">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># deploy.ps1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>copy _ServerConfig.yml _config.yml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hexo g -d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>del _config.yml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>copy _GitPageConfig.yml _config.yml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hexo g -d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>del _config.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果要部署到更多的git仓库，以此类推
之后部署只需要执行&lt;code>deploy.ps1&lt;/code>即可&lt;/p>
&lt;h2 id="0x03-为什么不单文件解决">&amp;lt;0x03&amp;gt; 为什么不单文件解决
&lt;/h2>&lt;p>(@ 23-07-07)&lt;br>
经过我的实际测试，确实也可以直接单文件搞定&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># _config.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">deploy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">repo&lt;/span>: &lt;span style="color:#ae81ff">git@{服务器ip}:{gitea用户名}/{gitea仓库名}.git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">branch&lt;/span>: &lt;span style="color:#ae81ff">master&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">repo&lt;/span>: &lt;span style="color:#ae81ff">git@github.com:{github用户名}/{github用户名}.github.io.git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">branch&lt;/span>: &lt;span style="color:#ae81ff">gh-pages&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样写也可以，&lt;code>hexo&lt;/code>会按从上到下的顺序依次部署&lt;/p>
&lt;p>但这样写会导致一个问题，就是网址的根域名会对不上&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># _config.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 部署到我自己的网站&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">url&lt;/span>: &lt;span style="color:#ae81ff">http://mlacookie.top/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 部署到GitHubPage&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">url&lt;/span>: &lt;span style="color:#ae81ff">https://MLAcookie.github.io/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果仅靠单一文件的话，两个部署的根域名会是一样的&lt;br>
这样可能会造成一些小问题&lt;/p>
&lt;p>靠&lt;code>powershell&lt;/code>还可以顺便做部署前的一些操作，挺方便的&lt;/p></description></item><item><title>搭建hexo+gitea的博客站</title><link>https://mlacookie.github.io/article/categories/blog/%E6%90%AD%E5%BB%BAhexo+gitea%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%AB%99/</link><pubDate>Sun, 23 Apr 2023 15:50:19 +0000</pubDate><guid>https://mlacookie.github.io/article/categories/blog/%E6%90%AD%E5%BB%BAhexo+gitea%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%AB%99/</guid><description>&lt;h2 id="0x00-为什么要用gitea--hexo">&amp;lt;0x00&amp;gt; 为什么要用gitea + hexo
&lt;/h2>&lt;p>很简单，gitea 太好用了(才不是因为 git 配置太麻烦)&lt;br>
而且 hexo 的博客就是静态网页，基本不怎么耗费服务器资源&lt;br>
如此再搭个 gitea 正好还能当个代码仓库，岂不美哉&lt;/p>
&lt;h2 id="0x01-整体运行架构">&amp;lt;0x01&amp;gt; 整体运行架构
&lt;/h2>&lt;p>就是 gitea 跑 git 仓库&lt;br>
然后利用 git hook 功能将仓库内容同步到服务器的另一个文件夹&lt;br>
hexo 的界面靠 nginx 反代
本地写完靠 hexo 的配置脚本通过 git 同步到服务器&lt;br>
(其实用 gitea 的话也可以通过插件实现 GitHub Page 的功能的)&lt;/p>
&lt;h2 id="0x02-先安装些组件">&amp;lt;0x02&amp;gt; 先安装些组件
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#安装nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt update &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> sudo apt upgrade
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt install nginx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>gitea 的安装在这就不赘述了&lt;br>
(我之前有从零搭建的教程)&lt;/p>
&lt;h2 id="0x03-配置git-hook">&amp;lt;0x03&amp;gt; 配置git hook
&lt;/h2>&lt;p>git hook 其实就是一个自动化脚本&lt;br>
简单理解就是 git 到服务器上后服务器要干的事&lt;br>
首先，在 gitea 里创建一个仓库，名字随意&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#进入对应仓库的hook配置目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd /var/lib/gitea/data/gitea-repositories/&lt;span style="color:#e6db74">${&lt;/span>gitea用户名&lt;span style="color:#e6db74">}&lt;/span>/&lt;span style="color:#e6db74">${&lt;/span>仓库名&lt;span style="color:#e6db74">}&lt;/span>.git/hooks/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>(&lt;code>${gitea用户名}&lt;/code>和&lt;code>${仓库名}&lt;/code>都是按照自己的设置填的)
这里是 git 的各种 hook，别的现在用不大到&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#进入需要编辑的hook目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd post-receive.d/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#创建我们自己的hook，名字随意&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim hexo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 hexo 文件中，输入以下内容&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sss&lt;span style="color:#f92672">=&lt;/span>/var/lib/gitea/data/gitea-repositories/&lt;span style="color:#e6db74">${&lt;/span>gitea用户名&lt;span style="color:#e6db74">}&lt;/span>/&lt;span style="color:#e6db74">${&lt;/span>仓库名&lt;span style="color:#e6db74">}&lt;/span>.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ttt&lt;span style="color:#f92672">=&lt;/span>/var/www/blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm -rf &lt;span style="color:#e6db74">${&lt;/span>ttt&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone &lt;span style="color:#e6db74">${&lt;/span>sss&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#e6db74">${&lt;/span>ttt&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中&lt;code>/var/www/blog&lt;/code>是你希望存储网页的地址，可以改成别的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#给这个hook添加可执行权限&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod a+x hexo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>现在，理论上当你用 hexo 一键配置脚本的时候，那些网页文件会出现在那个位置&lt;/p>
&lt;h2 id="0x04-配置存储地址和nginx">&amp;lt;0x04&amp;gt; 配置存储地址和nginx
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#进入你希望存网页的位置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd /var/www/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#为第一次git用户删除提供权限&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod -R &lt;span style="color:#ae81ff">777&lt;/span> ./
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#进入nginx的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd /etc/nginx/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd sites-enabled/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim default
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>需要注意的是，这里的nginx版本可能比较新，所以需要修改&lt;code>/etc/nginx/sites-enabled/default&lt;/code>&lt;br>
如果你在&lt;code>/etc/nginx/nginx.conf&lt;/code>中能看到在&lt;code>http{}&lt;/code>中有&lt;code>server{}&lt;/code>&lt;br>
那么直接在&lt;code>/etc/nginx/nginx.conf&lt;/code>就行&lt;/p>
&lt;p>在&lt;code>server{}&lt;/code>中，把&lt;code>root&lt;/code>的值改为存储网页的位置&lt;br>
在这里是改为&lt;code>root /var/www/blog&lt;/code>
再在&lt;code>index&lt;/code>后加入&lt;code>index.html&lt;/code>
(有了就不用加)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#重启nginx服务&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nginx -s reload
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>现在，理论上访问服务器 ip 后就是博客首页了&lt;/p>
&lt;h2 id="0x05-本地的一些修改">&amp;lt;0x05&amp;gt; 本地的一些修改
&lt;/h2>&lt;p>打开&lt;code>_config.yml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">deploy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">repo&lt;/span>: &lt;span style="color:#ae81ff">git@{服务器ip}:{gitea用户名}/{gitea仓库名}.git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">branch&lt;/span>: &lt;span style="color:#ae81ff">master&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>现在，当你运行&lt;code>hexo deploy&lt;/code>，网页内容将同步到git仓库并且也会同步到网页存储位置&lt;/p></description></item></channel></rss>